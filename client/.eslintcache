[{"/Users/romesh/lighthouse/LHL-final-project/client/src/index.js":"1","/Users/romesh/lighthouse/LHL-final-project/client/src/reportWebVitals.js":"2","/Users/romesh/lighthouse/LHL-final-project/client/src/App.js":"3","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Entry.js":"4","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Login.js":"5","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Gear.js":"6","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Search.js":"7","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Home.js":"8","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Library.js":"9","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Collection.js":"10","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Register.js":"11","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Project.js":"12","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Nav.js":"13","/Users/romesh/lighthouse/LHL-final-project/client/src/components/ProjectNav.js":"14","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Notes.js":"15","/Users/romesh/lighthouse/LHL-final-project/client/src/EventEmitter.js":"16","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Waveform.js":"17","/Users/romesh/lighthouse/LHL-final-project/client/src/components/NewCollection.js":"18","/Users/romesh/lighthouse/LHL-final-project/client/src/components/ProjectCard.js":"19","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Player.js":"20","/Users/romesh/lighthouse/LHL-final-project/client/src/components/NewProject.js":"21","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Song.js":"22","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Results.js":"23","/Users/romesh/lighthouse/LHL-final-project/client/src/components/SongPreview.js":"24","/Users/romesh/lighthouse/LHL-final-project/client/src/components/AddProjectToCollection.js":"25","/Users/romesh/lighthouse/LHL-final-project/client/src/components/PlayerTransport.js":"26","/Users/romesh/lighthouse/LHL-final-project/client/src/hooks/useDebounce.js":"27","/Users/romesh/lighthouse/LHL-final-project/client/src/components/ConfirmDelete.js":"28","/Users/romesh/lighthouse/LHL-final-project/client/src/components/NewCollectionCard.js":"29","/Users/romesh/lighthouse/LHL-final-project/client/src/components/LoginError.js":"30","/Users/romesh/lighthouse/LHL-final-project/client/src/components/RegError.js":"31","/Users/romesh/lighthouse/LHL-final-project/client/src/components/SideDrawer.js":"32"},{"size":500,"mtime":1610731422925,"results":"33","hashOfConfig":"34"},{"size":362,"mtime":1610731422926,"results":"35","hashOfConfig":"34"},{"size":2518,"mtime":1611510475385,"results":"36","hashOfConfig":"34"},{"size":1922,"mtime":1611495195864,"results":"37","hashOfConfig":"34"},{"size":4585,"mtime":1611504379442,"results":"38","hashOfConfig":"34"},{"size":1880,"mtime":1611504379441,"results":"39","hashOfConfig":"34"},{"size":4930,"mtime":1611517575337,"results":"40","hashOfConfig":"34"},{"size":5169,"mtime":1611516779065,"results":"41","hashOfConfig":"34"},{"size":3715,"mtime":1611438582734,"results":"42","hashOfConfig":"34"},{"size":6187,"mtime":1611504379441,"results":"43","hashOfConfig":"34"},{"size":5294,"mtime":1611504379443,"results":"44","hashOfConfig":"34"},{"size":8079,"mtime":1611504379443,"results":"45","hashOfConfig":"34"},{"size":1181,"mtime":1611509816637,"results":"46","hashOfConfig":"34"},{"size":1457,"mtime":1611509811975,"results":"47","hashOfConfig":"34"},{"size":851,"mtime":1611495195866,"results":"48","hashOfConfig":"34"},{"size":597,"mtime":1610891500528,"results":"49","hashOfConfig":"34"},{"size":5756,"mtime":1611504379444,"results":"50","hashOfConfig":"34"},{"size":2933,"mtime":1611504379442,"results":"51","hashOfConfig":"34"},{"size":1877,"mtime":1611504379443,"results":"52","hashOfConfig":"34"},{"size":737,"mtime":1611495195866,"results":"53","hashOfConfig":"34"},{"size":2126,"mtime":1611504379442,"results":"54","hashOfConfig":"34"},{"size":1826,"mtime":1611504379443,"results":"55","hashOfConfig":"34"},{"size":381,"mtime":1611495195867,"results":"56","hashOfConfig":"34"},{"size":3112,"mtime":1611504379443,"results":"57","hashOfConfig":"34"},{"size":1230,"mtime":1611495195864,"results":"58","hashOfConfig":"34"},{"size":1984,"mtime":1611495195866,"results":"59","hashOfConfig":"34"},{"size":535,"mtime":1611362535622,"results":"60","hashOfConfig":"34"},{"size":1036,"mtime":1611495195864,"results":"61","hashOfConfig":"34"},{"size":2194,"mtime":1611504379442,"results":"62","hashOfConfig":"34"},{"size":658,"mtime":1611418919636,"results":"63","hashOfConfig":"34"},{"size":658,"mtime":1611426649149,"results":"64","hashOfConfig":"34"},{"size":2797,"mtime":1611511137243,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1wqprfu",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"68"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"68"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"/Users/romesh/lighthouse/LHL-final-project/client/src/index.js",[],["141","142"],"/Users/romesh/lighthouse/LHL-final-project/client/src/reportWebVitals.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/App.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/Entry.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/Login.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/Gear.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/Search.js",["143","144"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Nav from \"./Nav\";\nimport SideDrawer from \"./SideDrawer\";\nimport Results from \"./Results\";\nimport SongPreview from \"./SongPreview\";\nimport { TextField, Grid, Container, Typography, useMediaQuery } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport useDebounce from \"../hooks/useDebounce\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainWindow: {\n    width: \"100%\",\n    margin: \"auto\"\n  },\n  mainHeader: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    // alignItems: \"flex-end\",\n    width: \"80%\",\n    // paddingLeft: 20,\n    // paddingRight: 40,\n    marginTop: 40,\n    // marginRight: 40\n  },\n  cardHeader: {\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(5),\n  },\n  mainHeading: {\n    marginRight: 40,\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  searchBox: {\n    color: \"white\",\n    backgroundColor: \"var(--black)\",\n    border: \"none\",\n    borderBottom: \"var(--tertiary-color) 2px solid\",\n    width: \"80%\",\n    position: 'relative',\n    top: -12,\n  },\n  input: {\n    color: \"white\"\n  }\n}));\n\nexport default function Search(props) {\n  const { isLoggedIn } = props;\n  const [term, setTerm] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [isSongSelected, setIsSongSelected] = useState({});\n  const [isSearching, setIsSearching] = useState(false);\n  const matches = useMediaQuery('(min-width:960px)');\n\n  const debouncedSearchTerm = useDebounce(term, 200);\n\n  useEffect(\n    () => {\n      // Make sure we have a value (user has entered something in input)\n      if (debouncedSearchTerm) {\n        setIsSearching(true);\n      }\n    }, [debouncedSearchTerm]);\n\n\n  //SEARCH QUERY\n  useEffect(() => {\n    axios({\n      //gets fill data from itunes\n      method: 'get',\n      url: `https://itunes.apple.com/search?term=${term.toLowerCase()}&country=CA&media=music&entity=song`\n    })\n      //gets our actual db data\n      .catch(err => console.log(err))\n      .then(data1 => {\n        axios.get(`api/content/search/${term.toLowerCase()}`)\n          .then(data2 => {\n            const response = []\n            if (data2.data.length > 0) {\n              const data2formatted = data2.data.map(entry => {\n                return {\n                  trackId: entry.id,\n                  artistName: entry.artist,\n                  artworkUrl100: entry.url_album_artwork,\n                  trackName: entry.title,\n                  collectionName: entry.album,\n                  previewUrl: entry.url_full_song_preview\n                }\n              })\n              response.push(...data2formatted)\n            }\n            //construct 600x600 URL from artworkURL100\n            const hiResItunes = data1.data.results.map(entry => {\n              const newURL = entry.artworkUrl100.replace('100x100bb.jpg', '600x600bb.jpg')\n              entry.artworkUrl100 = newURL\n              return entry;\n\n            })\n            response.push(...hiResItunes)\n            setResults(response);\n            //once we have results\n            setIsSearching(false);\n          })\n          .catch(err => console.log(err))\n      })\n  }, [debouncedSearchTerm])\n\n  const handleChange = (event) => {\n    setTerm(event.target.value)\n  }\n\n  const classes = useStyles();\n  return !isSongSelected.trackName ? (\n    <div style={{ display: \"flex\" }}>\n      {matches && <SideDrawer />}\n\n      <div className={classes.mainWindow}>\n        <Container className={classes.cardHeader} maxWidth=\"md\" id=\"header\">\n\n          <header className={classes.mainHeader}>\n\n            <Typography\n              className={classes.mainHeading}\n              component=\"h1\"\n              variant=\"h4\"\n              color=\"var(--white)\">\n              Search\n               </Typography>\n            {matches && <TextField\n              variant=\"filled\"\n              value={term}\n              onChange={handleChange}\n              className={classes.searchBox}\n              InputProps={{\n                className: classes.input\n              }} />}\n          </header>\n\n        </Container>\n        {!matches && <TextField\n          variant=\"filled\"\n          value={term}\n          onChange={handleChange}\n          className={classes.searchBox}\n          InputProps={{\n            className: classes.input\n          }} />}\n        <Container className={classes.cardGrid} maxWidth=\"md\" id=\"results\">\n          <Grid container spacing={4}>\n            <Results results={results} setSong={setIsSongSelected}></Results>\n          </Grid>\n        </Container>\n      </div>\n      {!matches && <Nav />}\n    </div >\n  ) : (\n      <div style={{ display: \"flex\" }}>\n        {matches && <SideDrawer />}\n        <SongPreview results={isSongSelected} setSong={setIsSongSelected} user={isLoggedIn} />\n        {!matches && <Nav />}\n      </div>\n    )\n}","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Home.js",["145","146"],"import { useState, useEffect, Fragment } from 'react';\nimport { Link, Redirect } from \"react-router-dom\";\nimport axios from 'axios';\nimport {\n  Container, Grid, Typography, useMediaQuery\n} from '@material-ui/core';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport Nav from \"./Nav\";\nimport SideDrawer from \"./SideDrawer\";\nimport ProjectCard from \"./ProjectCard\";\nimport NewCollectionCard from './NewCollectionCard';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n  mainWindow: {\n    width: \"100%\",\n    margin: \"auto\"\n  },\n  mainHeader: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    // paddingLeft: 20,\n    // paddingRight: 40,\n    marginTop: 40,\n    // marginBottom: \"1em\",\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(5),\n  },\n  gearIcon: {\n    color: \"var(--white)\",\n    fontSize: 36,\n    alignSelf: \"flex-end\"\n  },\n  typography: {\n    marginBottom: 20,\n  }\n}));\n\nexport default function Home(props) {\n  //for media query\n  const theme = useTheme();\n  const matches = useMediaQuery('(min-width:960px)');\n\n  const classes = useStyles();\n  const { isLoggedIn, refresh, setRefresh } = props;\n  const [collections, setCollections] = useState([])\n  const [projects, setProjects] = useState([])\n\n  // get collections & projects by user id\n  useEffect(() => {\n    axios\n      .get(`/api/content/${isLoggedIn}`)\n      .then(data => {\n        setCollections(data.data.collections.splice(0, 3));\n        setProjects(data.data.projects.splice(0, 3));\n        setRefresh(false);\n      })\n      .catch((err) => console.log(err));\n  }, [refresh, isLoggedIn]);\n\n  return isLoggedIn ? (\n    <div style={{ display: \"flex\" }}>\n      {matches && <SideDrawer />}\n\n      <div className={classes.mainWindow}>\n        <Container className={classes.cardGrid} maxWidth=\"md\" id=\"mainHeader\">\n\n\n          <header className={classes.mainHeader}>\n            <Typography\n              component=\"h1\"\n              variant=\"h4\"\n              color=\"var(--white)\">\n              Home\n            </Typography>\n            <Link to=\"/gear\">\n              <SettingsIcon\n                className={classes.gearIcon}\n              >Gear\n               </SettingsIcon>\n            </Link>\n          </header>\n        </Container>\n        <section>\n          <Container className={classes.cardGrid} maxWidth=\"md\" id=\"collections\">\n            <Typography className={classes.typography}\n              component=\"header\"\n              variant=\"h5\"\n              align=\"left\"\n            > Recent Collections\n          </Typography>\n            <Grid container spacing={4}>\n              {collections.length === 0 ? (\n                <NewCollectionCard\n                  key={0}\n                  title={\"There's nothing here yet!\"}\n                  subtitle={\"Start a new collection\"}\n                  image={\"https://rykabrown.com/wp-content/uploads/2021/01/new-coll.png\"}\n                  isLoggedIn={isLoggedIn}\n                  setCollections={setCollections}\n                />\n              ) : (\n                  <Fragment>\n                    {collections.map((collection, i) =>\n                      <Fragment key={i}>\n                        <ProjectCard\n                          key={collection.id}\n                          title={collection.name}\n                          thumbnail={collection.thumbnail}\n                          link={`/collection/${collection.id}`}\n                        />\n                      </Fragment>\n                    )}\n                  </Fragment>\n                )}\n            </Grid>\n          </Container>\n        </section>\n        <section>\n          <Container className={classes.cardGrid} maxWidth=\"md\" id=\"projects\" >\n            <Typography className={classes.typography}\n              component=\"header\"\n              variant=\"h5\"\n              align=\"left\">\n              Recent Projects\n          </Typography>\n            <Grid container spacing={4} >\n              {collections.length === 0 ? (\n                <ProjectCard\n                  key={1000}\n                  title={\"Ready to make some music?\"}\n                  songTitle={\"Start a new project\"}\n                  thumbnail={\"https://rykabrown.com/wp-content/uploads/2021/01/new-proj.png\"}\n                  link={`/search`}\n                />\n              ) : (\n                  <Fragment>\n                    {projects.map((project, i) =>\n                      <Fragment key={i}>\n                        <ProjectCard\n                          key={project.id}\n                          title={project.title}\n                          thumbnail={project.url_album_artwork}\n                          link={`/project/${project.id}`}\n                          songTitle={project.song_title}\n                          songArtist={project.artist}\n                        />\n                      </Fragment>\n                    )}\n                  </Fragment>\n                )}\n            </Grid>\n          </Container>\n        </section>\n      </div>\n      {!matches && < Nav />}\n    </div>\n  ) : (\n      <Redirect to=\"/\" />\n    );\n}\n","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Library.js",["147"],"import { useState, useEffect, Fragment } from 'react';\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport { Container, Grid, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ProjectCard from \"./ProjectCard\";\nimport NewCollectionCard from './NewCollectionCard'\nimport Nav from \"./Nav\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainHeader: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    paddingLeft: 20,\n    paddingRight: 40,\n    marginTop: 40,\n    marginBottom: 40\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(5),\n  },\n  typography: {\n    marginBottom: 20\n  }\n}));\n\nexport default function Library(props) {\n  const classes = useStyles();\n  const [collections, setCollections] = useState([])\n  const [projects, setProjects] = useState([])\n  const { isLoggedIn } = props;\n\n  // get collections & projects by user id\n  useEffect(() => {\n    axios\n      .get(`/api/content/${isLoggedIn}`)\n      .then(data => {\n        setCollections(data.data.collections);\n        setProjects(data.data.projects);\n      })\n  }, []);\n\n  return isLoggedIn ? (\n    <div>\n      <div>\n        <header className={classes.mainHeader}>\n          <Typography\n            component=\"h1\"\n            variant=\"h4\"\n            color=\"var(--white)\">\n            Library\n          </Typography>\n        </header>\n        <section>\n          <Container className={classes.cardGrid} maxWidth=\"md\" id=\"projects\">\n          <Typography className={classes.typography}\n            component=\"header\"\n            variant=\"h5\"\n            align=\"left\"\n          >All Collections\n          </Typography>\n            <Grid container spacing={4}>\n              <Fragment>\n                <NewCollectionCard\n                  key={0}\n                  title={\"Start a new collection\"}\n                  image={\"https://rykabrown.com/wp-content/uploads/2021/01/new-coll.png\"}\n                  isLoggedIn={isLoggedIn}\n                  setCollections={setCollections}\n                />\n              </Fragment>\n              {collections.map((collection, i) =>\n                <Fragment key={i}>\n                  <ProjectCard\n                    key={collection.id}\n                    title={collection.name}\n                    thumbnail={collection.thumbnail}\n                    link={`/collection/${collection.id}`}\n                  />\n                </Fragment>\n              )}\n            </Grid>\n          </Container>\n        </section>\n        <section>\n          <Container className={classes.cardGrid} maxWidth=\"md\" id=\"projects\" >\n          <Typography className={classes.typography}\n            component=\"header\"\n            variant=\"h5\"\n            align=\"left\"\n          >All Projects\n          </Typography>\n            <Grid container spacing={4} >\n              <ProjectCard\n                key={1000}\n                title={\"Start a new project\"}\n                thumbnail={\"https://rykabrown.com/wp-content/uploads/2021/01/new-proj.png\"}\n                link={`/search`}\n              />\n              {projects.map((project, i) =>\n                <Fragment key={i}>\n                  <ProjectCard\n                    key={project.id}\n                    title={project.title}\n                    thumbnail={project.url_album_artwork}\n                    link={`/project/${project.id}`}\n                    songTitle={project.song_title}\n                    songArtist={project.artist}\n                  />\n                </Fragment>\n              )}\n            </Grid>\n          </Container>\n        </section>\n        <Nav />\n      </div >\n    </div>\n  ) : (\n    <Redirect to=\"/\" />\n  )\n}","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Collection.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/Register.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/Project.js",["148"],"import { useState, useEffect, useRef } from \"react\";\nimport { Link, Redirect, useParams, Prompt } from \"react-router-dom\";\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SaveIcon from '@material-ui/icons/Save';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport { Box, Typography, IconButton, Button } from '@material-ui/core';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport Player from \"./Player\";\nimport PlayerTransport from \"./PlayerTransport\";\nimport ProjectNav from \"./ProjectNav\";\nimport Notes from \"./Notes\"\nimport AddProjectToCollection from \"./AddProjectToCollection\"\nimport ConfirmDelete from \"./ConfirmDelete\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainWindow: {\n    marginLeft: 10,\n    marginRight: 10,\n    marginBottom: 160,\n  },\n  header: {\n    marginTop: 20,\n    marginBottom: 20,\n    display: \"flex\"\n  },\n  backArrow: {\n    fontSize: \"large\",\n    padding: 10,\n  },\n  titleBox: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"start\"\n  },\n  player: {\n    width: \"50%\"\n  },\n  projectForm: {\n    width: 'calc(100%)',\n  },\n  formBox: {\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  saveIcon: {\n    margin: \"auto\",\n    fontSize: 56,\n    color: \"var(--quad-color)\"\n  },\n  link: {\n    textDecoration: \"none\"\n  }\n}));\n\n\nexport default function Project(props) {\n  const classes = useStyles();\n  const [content, setContent] = useState([{ title: \"\", artist: \"\", url: \"\" }]);\n  const [collections, setCollections] = useState([{ name: \"\", user_id: \"\", thumbnail: \"\" }]);\n  const [collectionId, setCollectionId] = useState();\n  const [note, setNote] = useState(\"\");\n  const [isNotChanged, setIsNotChanged] = useState(true);\n  const [open, setOpen] = useState(false);\n  const [redirectOnDelete, setRedirectOnDelete] = useState(true);\n  const [hasLoaded, setHasLoaded] = useState(false);\n  const { isLoggedIn } = props;\n\n  //for scroll to bottom\n  const [height, setHeight] = useState(0)\n  const ref = useRef(null)\n  const { id } = useParams()\n  const AudioCtx = window.AudioContext || window.webkitAudioContext;\n  const audioCtx = new AudioCtx();\n\n  useEffect(() => {\n    axios\n      //grabbing project, and associated songs/stems\n      .get(`http://localhost:8000/api/project/${id}`)\n      .then((data) => {\n        axios\n          //grabbing collections for user\n          .get(`/api/content/${isLoggedIn}`)\n          .then(data2 => {\n            setContent(data.data.projects);\n            setCollectionId(data.data.projects[0].collection_id);\n            setCollections(data2.data.collections)\n          })\n          .then(data2 => {\n            setContent(data.data.projects)\n          })\n          .catch(err => console.log(err))\n      })\n  }, [])\n\n  useEffect(() => {\n    setHeight(ref.current.clientHeight)\n  }, [hasLoaded])\n\n  const project = content[0]\n\n  const stems = content.map((project) => {\n    const { title, url, icon, peaks_array, name, project_title } = project\n    return { title, url, icon, peaks_array, name, project_title }\n  })\n\n  //save note and collection id\n  const saveNote = () => {\n    axios\n      .put(`http://localhost:8000/api/project/${id}`, {\n        notes: note,\n        collection_id: collectionId\n      })\n      .then(() => {\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    saveNote();\n    setIsNotChanged(true);\n  };\n\n  const deleteProject = () => {\n    axios\n      .delete(`http://localhost:8000/api/project/${id}`)\n      .then(() => {\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const handleAlertOpen = () => {\n    setOpen(true);\n  };\n\n  const handleCancelDelete = () => {\n    setOpen(false);\n  };\n\n  const handleConfirmDelete = () => {\n    deleteProject();\n    setRedirectOnDelete(false);\n  }\n\n  return isLoggedIn ? (\n    <div>\n      {!redirectOnDelete ? (\n        <Redirect to=\"/home\" />\n      ) : (\n\n          <div>\n\n            <div>\n              {!project ? (\n                <div>\n                <h1>Sorry, this title is not currently available</h1>\n                <Link to=\"/search\" className={classes.link}><Button color=\"primary\" variant=\"outlined\">Back to Search</Button></Link>\n                </div>\n              ) : (\n\n            <div>\n            <div className={classes.mainWindow} ref={ref}>\n              <header className={classes.header}>\n                <Link to=\"/home\">\n                  <ArrowBackIosIcon\n                    className={classes.backArrow}\n                  >Back to Home\n              </ArrowBackIosIcon>\n                </Link>\n\n                <Box className={classes.titleBox}>\n                  <Typography component=\"h1\" variant=\"h5\">\n                    {project.project_title}\n                  </Typography>\n                  <Typography variant=\"subtitle1\">\n                    {project.title} - {project.artist}\n                  </Typography>\n                </Box>\n\n              </header>\n\n              <Player className={classes.player} tracks={stems} audioCtx={audioCtx} id=\"player\" setHasLoaded={setHasLoaded}></Player>\n\n              <form\n                className={classes.projectForm}\n                onSubmit={handleSubmit}\n              >\n                <Box className={classes.formBox}>\n                  <AddProjectToCollection\n                    collections={collections}\n                    collectionId={collectionId}\n                    setCollectionId={setCollectionId} >\n                  </AddProjectToCollection>\n\n                  <IconButton aria-label=\"save\" type=\"submit\">\n                    <SaveIcon\n                      className={classes.saveIcon}\n                    >\n                    </SaveIcon>\n                  </IconButton>\n                  <IconButton aria-label=\"delete\" onClick={handleAlertOpen}>\n                    <DeleteForeverIcon\n                      className={classes.saveIcon}\n                    >\n                    </DeleteForeverIcon>\n                  </IconButton>\n                  <ConfirmDelete\n                    open={open}\n                    setOpen={setOpen}\n                    handleAlertOpen={handleAlertOpen}\n                    handleConfirmDelete={handleConfirmDelete}\n                    handleCancelDelete={handleCancelDelete}\n                    name={content[0].project_title}\n                  />\n                </Box>\n\n                {project && <Notes id=\"notes\" projectId={id} existingNote={project.notes} note={note} setNote={setNote} setIsNotChanged={setIsNotChanged} />}\n\n              </form>\n            </div>\n\n            <PlayerTransport tracks={stems} audioCtx={audioCtx} hasLoaded={hasLoaded} />\n            <ProjectNav height={height} />\n\n            <Prompt\n              when={!isNotChanged}\n              message={\"Don't you want to saaaaaaave!?\"}\n            />\n\n          </div>\n          )}\n        </div>\n    </div >\n    )}\n    </div>\n  ) : (\n      <Redirect to=\"/\" />\n    );\n}","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Nav.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/ProjectNav.js",["149"],"import { Link } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { BottomNavigation, Tab } from '@material-ui/core/';\nimport TuneOutlinedIcon from '@material-ui/icons/TuneOutlined';\nimport HomeIcon from '@material-ui/icons/Home';\nimport BookIcon from '@material-ui/icons/Book';\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n    width: '100%',\n    position: 'fixed',\n    bottom: 0,\n    background: \"var(--black)\",\n    backgroundImage: `url(\"https://www.transparenttextures.com/patterns/otis-redding.png\")`,\n    paddingTop: 10,\n    zIndex: 10,\n    borderTop: \"1px solid rgba(244, 240, 234, 0.1)\"\n  }\n});\n\nexport default function ProjectNav(props) {\n  const classes = useStyles();\n\n  const handlePlayerClick = () => {\n    window[`scrollTo`]({ top: 0, behavior: 'smooth' })\n  }\n  const handleNotesClick = () => {\n    window[`scrollTo`]({ top: props.height, behavior: 'smooth' })\n  }\n  const handleGlobalClick = () => {\n    window[`scrollTo`]({ top: props.height, behavior: 'smooth' })\n  }\n\n  return (\n    <BottomNavigation\n      showLabels\n      className={classes.root}\n    >\n      <Tab label=\"Home\" to=\"/home\" icon={<HomeIcon />} component={Link} />\n      <Tab label=\"Player\" icon={<TuneOutlinedIcon />} onClick={handlePlayerClick} />\n      <Tab label=\"Notes\" icon={<BookIcon />} onClick={handleNotesClick} />\n    </BottomNavigation>\n  );\n}\n\n","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Notes.js",["150"],"import { useEffect } from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n\n  notesBox: {\n    background: \"rgb(244, 240, 234)\",\n    width: '100%',\n    marginTop: 10\n  }\n\n}));\n\nexport default function Notes(props) {\n  const classes = useStyles();\n  const { existingNote, note, setNote, setIsNotChanged } = props;\n  const handleNote = (event) => {\n    setNote(event.target.value);\n    setIsNotChanged(false);\n  };\n\n  useEffect(() => {\n    setNote(existingNote);\n  }, [existingNote]);\n\n  return (\n    <div>\n      <TextField\n        className={classes.notesBox}\n        id=\"outlined-multiline-static\"\n        label=\"Project Notes\"\n        multiline\n        rows={10}\n        value={note}\n        onChange={handleNote}\n      />\n    </div>\n  )\n}","/Users/romesh/lighthouse/LHL-final-project/client/src/EventEmitter.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/Waveform.js",["151"],"import React, { useEffect, useRef, useState } from \"react\";\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { Box, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport '../RangeInput.css';\nimport WaveSurfer from \"wavesurfer.js\";\nimport Emitter from \"../EventEmitter\";\n\nexport default function Waveform({\n  track,\n  context,\n  setLoadCounter\n}) {\n\n  const waveformRef = useRef(null);\n  const wavesurfer = useRef(null);\n  const [volume, setVolume] = useState(0.5);\n  const [isMuted, setIsMuted] = useState(false);\n  const [soloed, setSolo] = useState(false);\n\n  const useStyles = makeStyles({\n    box: {\n      display: \"flex\",\n      alignItems: \"center\",\n      color: \"var(--white)\",\n    },\n    stemTitle: {\n      color: \"var(--white)\",\n      flexBasis: \"50%\",\n    },\n    input: {\n      // color: \"primary\"\n    },\n    muteButton: {\n      color: `${!isMuted ? \"var(--primary-color)\" : \"var(--quad-color)\"}`,\n      \"&:hover\": {\n        color: \"var(--white)\",\n        backgroundColor: \"rgba(244, 240, 234, 0.1);\"\n      }\n    },\n    soloButton: {\n      color: `${!soloed ? \"var(--primary-color)\" : \"var(--secondary-color)\"}`,\n      \"&:hover\": {\n        color: \"var(--white)\",\n        backgroundColor: \"rgba(244, 240, 234, 0.1);\"\n      }\n    },\n    hr: {\n      marginBottom: 20,\n    }\n\n  });\n  const classes = useStyles()\n\n  const formWaveSurferOptions = (ref) => ({\n    container: ref,\n    waveColor: \"#F5F5DC\",\n    progressColor: \"rgb(245, 103, 93)\",\n    cursorColor: \"rgb(245, 103, 93)\",\n    barMinHeight: 1,\n    barWidth: 3,\n    barRadius: 3,\n    responsive: true,\n    height: 80,\n    // If true, normalize by the maximum peak instead of 1.0.\n    normalize: true,\n    // Use the PeakCache to improve rendering speed of large waveforms.\n    partialRender: true,\n    audioContext: context,\n    backend: 'WebAudio',\n  });\n\n  // create new WaveSurfer instance\n  // On component mount and when url changes\n  useEffect(() => {\n    const options = formWaveSurferOptions(waveformRef.current);\n    wavesurfer.current = WaveSurfer.create(options);\n    wavesurfer.current.solo = false;\n    wavesurfer.current.load(track.url);\n    wavesurfer.current.on(\"ready\", function () {\n      // make sure object stillavailable when file loaded\n      if (wavesurfer.current) {\n        wavesurfer.current.setVolume(volume);\n        setVolume(volume);\n      }\n\n      //tell player object that the waveform is loaded\n      setLoadCounter(prev => prev + 1)\n      Emitter.on(\"clickRewind\", () => wavesurfer.current.seekTo(0));\n      Emitter.on(\"clickPlayPause\", () => wavesurfer.current.playPause());\n    });\n\n    //one for all - when one wavefrom performs a seekTo emit event with currentTime as argument\n    wavesurfer.current.on(\"seek\", function (progress) {\n      //emit seekAll event\n      Emitter.emit(\"seekAll\", wavesurfer.current.getCurrentTime());\n    });\n\n    //update other waveforms with progress from clicked\n    Emitter.on(\"seekAll\", (progress) => {\n      if (progress !== wavesurfer.current.getCurrentTime()) {\n        wavesurfer.current.setCurrentTime(progress);\n      }\n    });\n\n    Emitter.on(\"soloON\", () => {\n      if (!wavesurfer.current.solo && !wavesurfer.current.getMute()) {\n        wavesurfer.current.setMute(true);\n      } else if (!wavesurfer.current.solo && wavesurfer.current.getMute()) {\n      } else if (wavesurfer.current.solo) {\n        wavesurfer.current.setMute(false);\n      }\n    });\n\n\n    Emitter.on(\"soloOFF\", () => {\n      wavesurfer.current.solo = false;\n      setSolo(false);\n      if (!wavesurfer.current.wasMuted) {\n        wavesurfer.current.setMute(false);\n        setIsMuted(false);\n      } else {\n        wavesurfer.current.setMute(true);\n        setIsMuted(true);\n      }\n    });\n    return () => {\n      wavesurfer.current.unAll();\n      wavesurfer.current.destroy();\n    };\n  }, [track.url]);\n\n  const handleMute = () => {\n    setIsMuted(!isMuted);\n    wavesurfer.current.toggleMute();\n    wavesurfer.current.wasMuted = wavesurfer.current.getMute();\n  };\n\n  const handleSolo = () => {\n    setSolo(!soloed);\n    //not soloed and isMuted\n    if (!wavesurfer.current.solo && isMuted) {\n      wavesurfer.current.toggleMute();\n      wavesurfer.current.solo = true;\n      //not soloed and not isMuted\n    } else if (!wavesurfer.current.solo && !isMuted) {\n      wavesurfer.current.solo = true;\n    } else if (wavesurfer.current.solo) {\n      wavesurfer.current.solo = false;\n    }\n  };\n\n  useEffect(() => {\n    Emitter.emit(`${soloed ? \"soloON\" : \"soloOFF\"}`);\n  }, [soloed]);\n\n  const onVolumeChange = (e) => {\n    const { target } = e;\n    const newVolume = +target.value;\n\n    if (newVolume) {\n      setVolume(newVolume);\n      wavesurfer.current.setVolume(newVolume || 1);\n    }\n  };\n\n  return (\n    <div>\n      <div id=\"waveform\" ref={waveformRef} />\n      <Box className={classes.box}>\n        <Typography className={classes.stemTitle} component=\"h3\">\n          {track.name}\n        </Typography>\n\n        <ButtonGroup variant=\"text\" color=\"primary\" aria-label=\"text primary button group\">\n          <Button className={classes.muteButton} onClick={handleMute}>M</Button>\n          <Button className={classes.soloButton} onClick={handleSolo}>S</Button>\n        </ButtonGroup>\n\n        <input\n          type=\"range\"\n          id=\"volume\"\n          name=\"volume\"\n          // waveSurfer recognize value of `0` same as `1`\n          //  so we need to set some zero-ish value for silence\n          min=\"0.01\"\n          max=\"1\"\n          step=\".025\"\n          onChange={onVolumeChange}\n          value={volume}\n        />\n        <label htmlFor=\"volume\"></label>\n      </Box>\n      <hr className={classes.hr} />\n    </div>\n  );\n}\n",["152","153"],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/NewCollection.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/ProjectCard.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/Player.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/NewProject.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/Song.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/Results.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/SongPreview.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/AddProjectToCollection.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/PlayerTransport.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/hooks/useDebounce.js",["154"],"import { useState, useEffect } from 'react';\n\n// Our hook\nexport default function useDebounce(value, delay) {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(\n    () => {\n      // Set debouncedValue to value (passed in) after the specified delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n\n      // cleanup\n      return () => {\n        clearTimeout(handler);\n      };\n    }, [value]\n  );\n\n  return debouncedValue;\n}","/Users/romesh/lighthouse/LHL-final-project/client/src/components/ConfirmDelete.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/NewCollectionCard.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/LoginError.js",["155","156","157"],"import React, { useState } from 'react';\nimport {Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\n\nexport default function LoginError(props) {\n\n  return (\n    <div>\n      <Dialog\n        open={props.open}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"ERROR\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Looks like {props.emailError ? props.emailError : props.passError}\n          </DialogContentText>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n  \n}","/Users/romesh/lighthouse/LHL-final-project/client/src/components/RegError.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/SideDrawer.js",[],{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":56,"column":10,"nodeType":"164","messageId":"165","endLine":56,"endColumn":21},{"ruleId":"166","severity":1,"message":"167","line":110,"column":6,"nodeType":"168","endLine":110,"endColumn":27,"suggestions":"169"},{"ruleId":"162","severity":1,"message":"170","line":46,"column":9,"nodeType":"164","messageId":"165","endLine":46,"endColumn":14},{"ruleId":"166","severity":1,"message":"171","line":64,"column":6,"nodeType":"168","endLine":64,"endColumn":27,"suggestions":"172"},{"ruleId":"166","severity":1,"message":"173","line":42,"column":6,"nodeType":"168","endLine":42,"endColumn":8,"suggestions":"174"},{"ruleId":"166","severity":1,"message":"175","line":98,"column":6,"nodeType":"168","endLine":98,"endColumn":8,"suggestions":"176"},{"ruleId":"162","severity":1,"message":"177","line":33,"column":9,"nodeType":"164","messageId":"165","endLine":33,"endColumn":26},{"ruleId":"166","severity":1,"message":"178","line":25,"column":6,"nodeType":"168","endLine":25,"endColumn":20,"suggestions":"179"},{"ruleId":"166","severity":1,"message":"180","line":132,"column":6,"nodeType":"168","endLine":132,"endColumn":17,"suggestions":"181"},{"ruleId":"158","replacedBy":"182"},{"ruleId":"160","replacedBy":"183"},{"ruleId":"166","severity":1,"message":"184","line":19,"column":8,"nodeType":"168","endLine":19,"endColumn":15,"suggestions":"185"},{"ruleId":"162","severity":1,"message":"186","line":1,"column":17,"nodeType":"164","messageId":"165","endLine":1,"endColumn":25},{"ruleId":"162","severity":1,"message":"187","line":2,"column":9,"nodeType":"164","messageId":"165","endLine":2,"endColumn":15},{"ruleId":"162","severity":1,"message":"188","line":2,"column":25,"nodeType":"164","messageId":"165","endLine":2,"endColumn":38},"no-native-reassign",["189"],"no-negated-in-lhs",["190"],"no-unused-vars","'isSearching' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'term'. Either include it or remove the dependency array.","ArrayExpression",["191"],"'theme' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setRefresh'. Either include it or remove the dependency array.",["192"],"React Hook useEffect has a missing dependency: 'isLoggedIn'. Either include it or remove the dependency array.",["193"],"React Hook useEffect has missing dependencies: 'id' and 'isLoggedIn'. Either include them or remove the dependency array.",["194"],"'handleGlobalClick' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setNote'. Either include it or remove the dependency array.",["195"],"React Hook useEffect has missing dependencies: 'formWaveSurferOptions', 'setLoadCounter', and 'volume'. Either include them or remove the dependency array. If 'setLoadCounter' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["196"],["189"],["190"],"React Hook useEffect has a missing dependency: 'delay'. Either include it or remove the dependency array.",["197"],"'useState' is defined but never used.","'Button' is defined but never used.","'DialogActions' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},"Update the dependencies array to be: [debouncedSearchTerm, term]",{"range":"212","text":"213"},"Update the dependencies array to be: [refresh, isLoggedIn, setRefresh]",{"range":"214","text":"215"},"Update the dependencies array to be: [isLoggedIn]",{"range":"216","text":"217"},"Update the dependencies array to be: [id, isLoggedIn]",{"range":"218","text":"219"},"Update the dependencies array to be: [existingNote, setNote]",{"range":"220","text":"221"},"Update the dependencies array to be: [formWaveSurferOptions, setLoadCounter, track.url, volume]",{"range":"222","text":"223"},"Update the dependencies array to be: [delay, value]",{"range":"224","text":"225"},[3251,3272],"[debouncedSearchTerm, term]",[1661,1682],"[refresh, isLoggedIn, setRefresh]",[1151,1153],"[isLoggedIn]",[2858,2860],"[id, isLoggedIn]",[577,591],"[existingNote, setNote]",[3911,3922],"[formWaveSurferOptions, setLoadCounter, track.url, volume]",[495,502],"[delay, value]"]