[{"/Users/romesh/lighthouse/LHL-final-project/client/src/index.js":"1","/Users/romesh/lighthouse/LHL-final-project/client/src/reportWebVitals.js":"2","/Users/romesh/lighthouse/LHL-final-project/client/src/App.js":"3","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Entry.js":"4","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Login.js":"5","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Gear.js":"6","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Search.js":"7","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Home.js":"8","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Library.js":"9","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Collection.js":"10","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Register.js":"11","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Project.js":"12","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Nav.js":"13","/Users/romesh/lighthouse/LHL-final-project/client/src/components/ProjectNav.js":"14","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Notes.js":"15","/Users/romesh/lighthouse/LHL-final-project/client/src/EventEmitter.js":"16","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Waveform.js":"17","/Users/romesh/lighthouse/LHL-final-project/client/src/components/NewCollection.js":"18","/Users/romesh/lighthouse/LHL-final-project/client/src/components/ProjectCard.js":"19","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Player.js":"20","/Users/romesh/lighthouse/LHL-final-project/client/src/components/NewProject.js":"21","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Song.js":"22","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Results.js":"23","/Users/romesh/lighthouse/LHL-final-project/client/src/components/SongPreview.js":"24","/Users/romesh/lighthouse/LHL-final-project/client/src/components/AddProjectToCollection.js":"25","/Users/romesh/lighthouse/LHL-final-project/client/src/components/PlayerTransport.js":"26","/Users/romesh/lighthouse/LHL-final-project/client/src/hooks/useDebounce.js":"27","/Users/romesh/lighthouse/LHL-final-project/client/src/components/ConfirmDelete.js":"28","/Users/romesh/lighthouse/LHL-final-project/client/src/components/NewCollectionCard.js":"29","/Users/romesh/lighthouse/LHL-final-project/client/src/components/LoginError.js":"30","/Users/romesh/lighthouse/LHL-final-project/client/src/components/RegError.js":"31"},{"size":500,"mtime":1610731422925,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":1610731422926,"results":"34","hashOfConfig":"33"},{"size":2961,"mtime":1611429264686,"results":"35","hashOfConfig":"33"},{"size":1941,"mtime":1611433520987,"results":"36","hashOfConfig":"33"},{"size":4915,"mtime":1611429264687,"results":"37","hashOfConfig":"33"},{"size":1901,"mtime":1611429264687,"results":"38","hashOfConfig":"33"},{"size":4064,"mtime":1611433125892,"results":"39","hashOfConfig":"33"},{"size":4540,"mtime":1611433479837,"results":"40","hashOfConfig":"33"},{"size":3715,"mtime":1611426649147,"results":"41","hashOfConfig":"33"},{"size":4515,"mtime":1611418919634,"results":"42","hashOfConfig":"33"},{"size":5601,"mtime":1611429264688,"results":"43","hashOfConfig":"33"},{"size":6751,"mtime":1611418919637,"results":"44","hashOfConfig":"33"},{"size":1031,"mtime":1611416386528,"results":"45","hashOfConfig":"33"},{"size":1397,"mtime":1611416386529,"results":"46","hashOfConfig":"33"},{"size":858,"mtime":1611362535619,"results":"47","hashOfConfig":"33"},{"size":597,"mtime":1610891500528,"results":"48","hashOfConfig":"33"},{"size":6352,"mtime":1611416386530,"results":"49","hashOfConfig":"33"},{"size":2521,"mtime":1611429264687,"results":"50","hashOfConfig":"33"},{"size":1769,"mtime":1611426649148,"results":"51","hashOfConfig":"33"},{"size":810,"mtime":1611416386528,"results":"52","hashOfConfig":"33"},{"size":1698,"mtime":1611429264688,"results":"53","hashOfConfig":"33"},{"size":1847,"mtime":1611269438564,"results":"54","hashOfConfig":"33"},{"size":425,"mtime":1611186354633,"results":"55","hashOfConfig":"33"},{"size":3836,"mtime":1611354814459,"results":"56","hashOfConfig":"33"},{"size":1295,"mtime":1611362535616,"results":"57","hashOfConfig":"33"},{"size":2071,"mtime":1611418919637,"results":"58","hashOfConfig":"33"},{"size":535,"mtime":1611362535622,"results":"59","hashOfConfig":"33"},{"size":1037,"mtime":1611362535617,"results":"60","hashOfConfig":"33"},{"size":2032,"mtime":1611426649148,"results":"61","hashOfConfig":"33"},{"size":658,"mtime":1611418919636,"results":"62","hashOfConfig":"33"},{"size":658,"mtime":1611426649149,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1wqprfu",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"66"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"66"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"66"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"/Users/romesh/lighthouse/LHL-final-project/client/src/index.js",[],["145","146"],"/Users/romesh/lighthouse/LHL-final-project/client/src/reportWebVitals.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/App.js",["147","148","149","150","151","152","153","154"],"import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link, useParams } from \"react-router-dom\";\n// import UserInfo from '../UserInfo';\nimport axios from \"axios\";\nimport \"./App.css\";\n\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport green from '@material-ui/core/colors/green';\n\nimport Project from \"./components/Project\";\nimport Entry from \"./components/Entry\";\nimport Login from \"./components/Login\";\nimport Gear from \"./components/Gear\";\nimport Search from \"./components/Search\";\nimport Register from \"./components/Register\";\nimport Library from \"./components/Library\";\nimport Home from \"./components/Home\";\nimport Collection from \"./components/Collection\";\nimport SongPreview from \"./components/SongPreview\"\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"rgb(245, 103, 93)\",\n    },\n    secondary: {\n      main: \"rgb(244, 240, 234)\",\n    },\n    layersWhite: {\n      main: \"rgb(244, 240, 234)\",\n    }\n  },\n  typography: {\n    color: \"var(--white)\"\n  }\n});\n\n\nexport default function App() {\n  const [tracks, setTracks] = useState([]);\n  const userInStorage = useState(localStorage.getItem(\"user\"));\n  const [user, setUser] = useState(userInStorage ? userInStorage : null);\n  const [refresh, setRefresh] = useState(false);\n\n  useEffect(() => {\n    const localUser = localStorage.getItem(\"user\")\n    setUser(localUser)\n  }, [])\n  // instead of local, have use effect thatt uses on mount to send axios req to backend\n  useEffect(() => {\n    localStorage.setItem(\"user\", user)\n  }, [user])\n\n  console.log(\"LOCAL USER IN APP-----\", user);\n\n  return (\n\n    <Router>\n      <ThemeProvider theme={theme}>\n        <div className=\"App\">\n          <Switch>\n            <Route path=\"/gear\">\n              <Gear isLoggedIn={user} setUser={setUser} />\n            </Route>\n            <Route path=\"/home\">\n              <Home isLoggedIn={user} refresh={refresh} setRefresh={setRefresh} />\n            </Route>\n            <Route path=\"/library\">\n              <Library isLoggedIn={user} />\n            </Route>\n            <Route path=\"/collection/:id\">\n              <Collection isLoggedIn={user} setRefresh={setRefresh} />\n            </Route>\n            <Route path=\"/search\">\n              <Search isLoggedIn={user} />\n            </Route>\n            <Route path=\"/project/:id\">\n              <Project isLoggedIn={user} />\n            </Route>\n            <Route path=\"/login\">\n              <Login isLoggedIn={user} setUser={setUser} />\n            </Route>\n            <Route path=\"/register\">\n              <Register isLoggedIn={user} setUser={setUser} />\n            </Route>\n            <Route path=\"/\">\n              <Entry />\n            </Route>\n          </Switch>\n        </div>\n      </ThemeProvider>\n    </Router>\n  );\n}\n\n// routing system that usee state","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Entry.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/Login.js",["155","156"],"import { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { FormControl, Button } from \"@material-ui/core\";\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport LoginError from \"./LoginError\"\n\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"baseline\",\n    justifyContent: \"center\",\n    color: \"antiquewhite\",\n    fontFamily: \"Noto Sans\",\n    margin: \"20px\",\n\n  },\n\n  heading2: {\n    color: \"antiquewhite\",\n    fontFamily: \"Noto Sans\",\n    fontSize: 15,\n    margin: \"30px\",\n  },\n\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    width: \"100%\",\n    height: \"50%\",\n  },\n\n  email: {\n    width: \"80%\",\n    color: \"white\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n\n  emailText: {\n    color: \"var(--white)\",\n    display: \"flex\",\n    backgroundColor: \"var(--black)\",\n    border: \"none\",\n    borderBottom: \"var(--tertiary-color) 4px solid\",\n    backgroundImage: `url(${\"https://www.transparenttextures.com/patterns/otis-redding.png\"})`,\n    margin: \"30px\",\n    outline: \"none\",\n    alignSelf: \"center\",\n    width: \"100%\",\n    fontSize: \"15px\",\n  },\n\n  password: {\n    width: \"80%\",\n    color: \"white\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n\n  passwordText: {\n    color: \"var(--white)\",\n    display: \"flex\",\n    backgroundColor: \"var(--black)\",\n    border: \"none\",\n    borderBottom: \"var(--tertiary-color) 4px solid\",\n    backgroundImage: `url(${\"https://www.transparenttextures.com/patterns/otis-redding.png\"})`,\n    margin: \"30px\",\n    outline: \"none\",\n    width: \"100%\",\n    alignSelf: \"center\",\n    fontSize: \"15px\",\n  },\n\n  logButton: {\n    fontFamily: \"Noto Sans\",\n    display: \"flex\",\n    background: \"var(--primary-color)\",\n    width: \"60%\",\n    margin: \"40px\",\n    color: \"var(--white)\",\n  },\n\n  back: {\n    flexGrow: 1,\n    display: \"flex\",\n  },\n\n  regLink: {\n    color: \"antiquewhite\",\n    textDecoration: \"none\",\n  },\n}));\n\nexport default function Login(props) {\n  const { setUser, isLoggedIn } = props;\n  const [emailData, setEmailData] = useState(\"\");\n  const [passwordData, setPasswordData] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const [passError, setPassError] = useState(\"\")\n  const [emailError, setEmailError] = useState(\"\")\n  const classes = useStyles();\n\n  const loginUser = () => {\n    axios\n      .post(\"/api/users/login\", {\n        email: emailData,\n        password: passwordData,\n      })\n      .then((res) => {\n        // console.log(\"THIS IS RES ---------\", res.data)\n        if (res.data.userId) {\n          // console.log(\"TRUE USER------->\", res.data.userId)\n          setUser(res.data.userId);\n        } else {\n          // res.data === \"that email doesn't exist\" || \"that password is incorrect\"\n          // console.log(\"FIND EMAIL----------->\", res.data)\n          setEmailError(res.data) || setPassError(res.data)\n          setOpen(true)\n          setTimeout(function(){ setOpen(false); }, 2000);\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    loginUser();\n  };\n\n  const handleEmail = (event) => {\n    setEmailData(event.target.value);\n  };\n\n  const handlePassword = (event) => {\n    setPasswordData(event.target.value);\n  };\n\n  const handleErrorOpen = () => {\n    setOpen(true);\n  };\n\n  const handleErrorClosed = () => {\n    setOpen(false);\n  };\n\n  return !isLoggedIn ? (\n    <div>\n      <div className={classes.main}>\n        <Link to=\"/entry\">\n          <ArrowBackIosIcon>\n          </ArrowBackIosIcon>\n        </Link>\n        <h1 className={classes.main}>Welcome Back!</h1>\n\n      <LoginError\n        open={open}\n        setOpen={setOpen}\n        handleErrorOpen={handleErrorOpen}\n        handleErrorOpen={handleErrorClosed}\n        emailError={emailError}\n        passError={passError}\n\n      />\n      </div>\n\n      <h2 className={classes.heading2}>Let's get you logged in</h2>\n\n      <div className={classes.formDiv}>\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <FormControl className={classes.emailInput}>\n            <input\n              className={classes.emailText}\n              value={emailData}\n              onChange={handleEmail}\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Email\"\n              aria-label=\"email\"\n            ></input>\n          </FormControl>\n\n          <FormControl className={classes.passwordInput}>\n            <input\n              className={classes.passwordText}\n              value={passwordData}\n              onChange={handlePassword}\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              aria-label=\"password\"\n            ></input>\n          </FormControl>\n\n          <Button className={classes.logButton} type=\"submit\">\n            Login\n          </Button>\n        </form>\n        <Link to=\"/register\" className={classes.regLink}>\n          <href className={classes.regLink}>\n            Don't have an account? Register here\n          </href>\n        </Link>\n      </div>\n    </div>\n  ) : (\n      <Redirect to=\"/home\" />\n    );\n}\n","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Gear.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/Search.js",["157","158","159","160","161","162","163"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Nav from \"./Nav\";\nimport Results from \"./Results\";\nimport NewProject from \"./NewProject\";\nimport NewCollection from \"./NewCollection\";\nimport SongPreview from \"./SongPreview\";\nimport { Redirect } from \"react-router-dom\";\nimport { TextField, Grid, Container, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport useDebounce from \"../hooks/useDebounce\";\nimport { TextFormatTwoTone } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainHeader: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    paddingLeft: 20,\n    paddingRight: 40,\n    marginTop: 40,\n    marginBottom: 40\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n\n  searchBox: {\n    color: \"white\",\n    backgroundColor: \"#1a1a1a\",\n    border: \"none\",\n    borderBottom: \"var(--tertiary-color) 2px solid\",\n    width: \"80%\"\n  },\n  input: {\n    color: \"white\"\n  }\n}));\n\nexport default function Search(props) {\n  const { isLoggedIn } = props;\n  const [term, setTerm] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [isSongSelected, setIsSongSelected] = useState({});\n  const [isSearching, setIsSearching] = useState(false);\n\n  const debouncedSearchTerm = useDebounce(term, 200);\n\n  useEffect(\n    () => {\n      // Make sure we have a value (user has entered something in input)\n      if (debouncedSearchTerm) {\n        setIsSearching(true);\n      }\n    }, [debouncedSearchTerm]);\n\n\n  //SEARCH QUERY\n  useEffect(() => {\n    axios({\n      //gets fill data from itunes\n      method: 'get',\n      url: `https://itunes.apple.com/search?term=${term.toLowerCase()}&country=CA&media=music&entity=song`\n    })\n      //gets our actual db data\n      .catch(err => console.log(err))\n      .then(data1 => {\n        axios.get(`api/content/search/${term.toLowerCase()}`)\n          .then(data2 => {\n            const response = []\n            if (data2.data.length > 0) {\n              const data2formatted = data2.data.map(entry => {\n                return {\n                  trackId: entry.id,\n                  artistName: entry.artist,\n                  artworkUrl100: entry.url_album_artwork,\n                  trackName: entry.title,\n                  collectionName: entry.album,\n                  previewUrl: entry.url_full_song_preview\n                }\n              })\n              response.push(...data2formatted)\n            }\n            //construct 600x600 URL from artworkURL100\n            const hiResItunes = data1.data.results.map(entry => {\n              const newURL = entry.artworkUrl100.replace('100x100bb.jpg', '600x600bb.jpg')\n              entry.artworkUrl100 = newURL\n              return entry;\n\n            })\n            console.log(hiResItunes)\n\n            response.push(...hiResItunes)\n            setResults(response);\n            //once we have results\n            setIsSearching(false);\n          })\n          .catch(err => console.log(err))\n      })\n  }, [debouncedSearchTerm])\n\n  const handleChange = (event) => {\n    setTerm(event.target.value)\n  }\n\n  const classes = useStyles();\n  return !isSongSelected.trackName ? (\n    <div>\n      <header className={classes.mainHeader}>\n        <Typography\n          component=\"h1\"\n          variant=\"h4\"\n          color=\"var(--white)\">\n          Search\n          </Typography>\n      </header>\n      <TextField\n        variant=\"filled\"\n        value={term}\n        onChange={handleChange}\n        className={classes.searchBox}\n        InputProps={{\n          className: classes.input\n        }} />\n      <Container className={classes.cardGrid} maxWidth=\"md\" id=\"projects\">\n        <Grid container spacing={4}>\n          <Results results={results} setSong={setIsSongSelected}></Results>\n        </Grid>\n      </Container>\n      <Nav />\n    </div >\n  ) : (\n      <div>\n        <SongPreview results={isSongSelected} setSong={setIsSongSelected} user={isLoggedIn} />\n        <Nav />\n      </div>\n    )\n}","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Home.js",["164"],"import { useState, useEffect, Fragment } from 'react';\nimport { Link, Redirect } from \"react-router-dom\";\nimport axios from 'axios';\n\nimport { Container, Grid, Typography } from '@material-ui/core';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nimport Nav from \"./Nav\";\nimport ProjectCard from \"./ProjectCard\";\nimport NewCollectionCard from './NewCollectionCard';\n\nconst useStyles = makeStyles((theme) => ({\n  mainHeader: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    paddingLeft: 20,\n    paddingRight: 40,\n    marginTop: 40,\n    marginBottom: 40\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(7),\n  },\n  gearIcon: {\n    color: \"var(--white)\",\n    fontSize: 36,\n    alignSelf: \"flex-end\"\n  },\n  typography: {\n    marginBottom: 48,\n  }\n}));\n\nexport default function Home(props) {\n  const classes = useStyles();\n  const { isLoggedIn, refresh, setRefresh } = props;\n\n  console.log(\"LOIIIILL----\", isLoggedIn);\n\n  const [collections, setCollections] = useState([])\n  const [projects, setProjects] = useState([])\n\n  // get collections & projects by user id\n  useEffect(() => {\n    axios\n      .get(`/api/content/${isLoggedIn}`)\n      .then(data => {\n        setCollections(data.data.collections.splice(0, 3));\n        setProjects(data.data.projects.splice(0, 3));\n        setRefresh(false);\n      })\n      .catch((err) => console.log(err));\n  }, [refresh, isLoggedIn]);\n\n  return isLoggedIn ? (\n    <div>\n\n      <header className={classes.mainHeader}>\n        <Typography\n          component=\"h1\"\n          variant=\"h4\"\n          color=\"var(--white)\">\n          Home\n        </Typography>\n        <Link to=\"/gear\">\n          <SettingsIcon\n            className={classes.gearIcon}\n          >Gear\n          </SettingsIcon>\n        </Link>\n      </header>\n      <section>\n        <Container className={classes.cardGrid} maxWidth=\"md\" id=\"projects\">\n          <Typography className={classes.typography}\n            component=\"header\"\n            variant=\"h5\"\n            align=\"left\"\n          > Recent Collections\n          </Typography>\n          <Grid container spacing={4}>\n            {collections.length === 0 ? (\n              <NewCollectionCard\n                key={0}\n                title={\"There's nothing here yet!\"}\n                subtitle={\"Start a new collection\"}\n                image={\"https://rykabrown.com/wp-content/uploads/2021/01/new-coll.png\"}\n                isLoggedIn={isLoggedIn}\n                setCollections={setCollections}\n              />\n            ) : (\n                <Fragment>\n                  {collections.map((collection, i) =>\n                    <Fragment key={i}>\n                      <ProjectCard\n                        key={collection.id}\n                        title={collection.name}\n                        thumbnail={collection.thumbnail}\n                        link={`/collection/${collection.id}`}\n                      />\n                    </Fragment>\n                  )}\n                </Fragment>\n              )}\n          </Grid>\n        </Container>\n      </section>\n      <section>\n        <Container className={classes.cardGrid} maxWidth=\"md\" id=\"projects\" >\n          <Typography className={classes.typography}\n            component=\"header\"\n            variant=\"h5\"\n            align=\"left\">\n            Recent Projects\n          </Typography>\n          <Grid container spacing={4} >\n            {collections.length === 0 ? (\n              <ProjectCard\n                key={1000}\n                title={\"Ready to make some music?\"}\n                songTitle={\"Start a new project\"}\n                thumbnail={\"https://rykabrown.com/wp-content/uploads/2021/01/new-proj.png\"}\n                link={`/search`}\n              />\n            ) : (\n                <Fragment>\n                  {projects.map((project, i) =>\n                    <Fragment key={i}>\n                      <ProjectCard\n                        key={project.id}\n                        title={project.title}\n                        thumbnail={project.url_album_artwork}\n                        link={`/project/${project.id}`}\n                        songTitle={project.song_title}\n                        songArtist={project.artist}\n                      />\n                    </Fragment>\n                  )}\n                </Fragment>\n              )}\n          </Grid>\n        </Container>\n      </section>\n      <Nav />\n    </div>\n  ) : (\n      <Redirect to=\"/\" />\n    );\n}\n","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Library.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/Collection.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/Register.js",["165","166","167"],"import { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { FormControl, Button } from \"@material-ui/core\";\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport RegError from \"./RegError\"\n\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"baseline\",\n    justifyContent: \"center\",\n    color: \"var(--white)\",\n    fontFamily: \"Noto Sans\",\n    margin: \"20px\",\n\n  },\n\n  heading2: {\n    color: \"var(--white)\",\n    fontFamily: \"Noto Sans\",\n    fontSize: 15,\n    margin: \"40px\",\n  },\n\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    width: \"100%\",\n    height: \"50%\",\n  },\n\n  email: {\n    width: \"80%\",\n    color: \"white\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n\n  emailText: {\n    color: \"var(--white)\",\n    display: \"flex\",\n    backgroundColor: \"var(--black)\",\n    border: \"none\",\n    borderBottom: \"var(--tertiary-color) 4px solid\",\n    backgroundImage: `url(${\"https://www.transparenttextures.com/patterns/otis-redding.png\"})`,\n    margin: \"30px\",\n    outline: \"none\",\n    alignSelf: \"center\",\n    width: \"100%\",\n    fontSize: \"15px\",\n  },\n\n  password: {\n    width: \"80%\",\n    color: \"var(--white)\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n\n  passwordText: {\n    color: \"var(--white)\",\n    display: \"flex\",\n    backgroundColor: \"var(--black)\",\n    border: \"none\",\n    borderBottom: \"var(--tertiary-color) 4px solid\",\n    backgroundImage: `url(${\"https://www.transparenttextures.com/patterns/otis-redding.png\"})`,\n    margin: \"30px\",\n    outline: \"none\",\n    width: \"100%\",\n    alignSelf: \"center\",\n    fontSize: \"15px\",\n  },\n\n  name: {\n    width: \"80%\",\n    color: \"var(--white)\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n\n  nameText: {\n    color: \"var(--white)\",\n    display: \"flex\",\n    backgroundColor: \"var(--black)\",\n    border: \"none\",\n    borderBottom: \"var(--tertiary-color) 4px solid\",\n    backgroundImage: `url(${\"https://www.transparenttextures.com/patterns/otis-redding.png\"})`,\n    margin: \"30px\",\n    outline: \"none\",\n    width: \"100%\",\n    alignSelf: \"center\",\n    fontSize: \"15px\",\n  },\n\n  regButton: {\n    fontFamily: \"Noto Sans\",\n    display: \"flex\",\n    background: \"var(--primary-color)\",\n    width: \"60%\",\n    margin: \"40px\",\n    color: \"var(--white)\",\n  },\n\n  back: {\n    flexGrow: 1,\n    display: \"flex\",\n  },\n  \n  regLink: {\n    color: \"var(--white)\",\n    textDecoration: \"none\",\n  },\n}));\n\n\nexport default function Register(props) {\n  const { setUser, isLoggedIn } = props;\n  const [nameData, setNameData] = useState(\"\");\n  const [emailData, setEmailData] = useState(\"\");\n  const [passwordData, setPasswordData] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const [passError, setPassError] = useState(\"\")\n  const [emailError, setEmailError] = useState(\"\")\n\n  const classes = useStyles();\n  \n  const saveUser = () => {\n    axios\n      .post(\"/api/users\", {\n        first_name: nameData,\n        email: emailData,\n        password: passwordData,\n      })\n      .then((res) => {\n        console.log(\"FIND ERROR----------->\", res.data)\n        if (res.data.userId) {\n          // console.log(\"TRUE USER------->\", res.data.userId)\n          setUser(res.data.userId);\n        } else {\n          // res.data === \"that email doesn't exist\" || \"that password is incorrect\"\n          // console.log(\"FIND EMAIL----------->\", res.data)\n          setEmailError(res.data) || setPassError(res.data)\n          setOpen(true)\n          setTimeout(function(){ setOpen(false); }, 2000);\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    saveUser();\n  };\n\n  const handleName = (event) => {\n    setNameData(event.target.value);\n  };\n\n  const handleEmail = (event) => {\n    setEmailData(event.target.value);\n  };\n\n  const handlePassword = (event) => {\n    setPasswordData(event.target.value);\n  };\n\n  const handleErrorOpen = () => {\n    setOpen(true);\n  };\n\n  const handleErrorClosed = () => {\n    setOpen(false);\n  };\n\n  return !isLoggedIn ? (\n    <div>\n\n      <div className={classes.main}>\n        <Link to=\"/entry\">\n          <ArrowBackIosIcon>\n          </ArrowBackIosIcon>\n        </Link>\n        <h1 className={classes.main}>Welcome!</h1>\n      </div>\n\n      <RegError\n        open={open}\n        setOpen={setOpen}\n        handleErrorOpen={handleErrorOpen}\n        handleErrorOpen={handleErrorClosed}\n        emailError={emailError}\n        passError={passError}\n\n      />\n\n      <h2 className={classes.heading2}>Let's get you signed up</h2>\n\n      <div className={classes.formDiv}>\n        <form\n          autocomplete=\"off\"\n          className={classes.form}\n          onSubmit={handleSubmit}\n        >\n          <FormControl className={classes.emailInput}>\n            <input\n              className={classes.nameText}\n              onChange={handleName}\n              type=\"first_name\"\n              value={nameData}\n              name=\"first_name\"\n              placeholder=\"Beethoven? Drake? Is that you?\"\n              aria-label=\"first_name\"\n            ></input>\n          </FormControl>\n          <FormControl className={classes.emailInput}>\n            <input\n              className={classes.emailText}\n              value={emailData}\n              onChange={handleEmail}\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"example@gmail.com\"\n              aria-label=\"email\"\n            ></input>\n          </FormControl>\n          <FormControl className={classes.passwordInput}>\n            <input\n              className={classes.passwordText}\n              value={passwordData}\n              onChange={handlePassword}\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password... is not a great password\"\n              aria-label=\"password\"\n            ></input>\n          </FormControl>\n\n          <Button className={classes.regButton} type=\"submit\">\n            Sign up\n          </Button>\n        </form>\n\n        <Link to=\"/login\" className={classes.regLink}>\n          <href className={classes.regLink}>\n            Already registered? Login here\n          </href>\n        </Link>\n      </div>\n    </div>\n  ) : (\n      <Redirect to=\"/home\" />\n    );\n}","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Project.js",["168","169","170","171"],"import { useState, useEffect, useRef } from \"react\";\nimport { Link, Redirect, useParams, Prompt } from \"react-router-dom\";\nimport axios from 'axios';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport SaveIcon from '@material-ui/icons/Save';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport { Box, Typography, IconButton } from '@material-ui/core';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\n\nimport Player from \"./Player\";\nimport PlayerTransport from \"./PlayerTransport\";\nimport ProjectNav from \"./ProjectNav\";\nimport Notes from \"./Notes\"\nimport AddProjectToCollection from \"./AddProjectToCollection\"\nimport ConfirmDelete from \"./ConfirmDelete\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  mainWindow: {\n    marginLeft: 10,\n    marginRight: 10,\n  },\n\n  header: {\n    marginTop: 20,\n    display: \"flex\"\n  },\n  backArrow: {\n    fontSize: \"large\",\n    padding: 10,\n  },\n  titleBox: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"start\"\n  },\n  player: {\n    width: \"50%\"\n  },\n\n  projectForm: {\n    width: 'calc(100%)',\n    // marginLeft: 10,\n    // marginRight: 10,\n  },\n  formBox: {\n    display: \"flex\",\n    justifyContent: \"space-between\"\n    // flexDirection: \"column\"\n  },\n  saveIcon: {\n    margin: \"auto\",\n    fontSize: 56,\n    color: \"var(--quad-color)\"\n  },\n}));\n\n\nexport default function Project(props) {\n  const classes = useStyles();\n  const [content, setContent] = useState([{ title: \"\", artist: \"\", url: \"\" }]);\n  const [collections, setCollections] = useState([{ name: \"\", user_id: \"\", thumbnail: \"\" }]);\n  const [collectionId, setCollectionId] = useState();\n  const [note, setNote] = useState(\"\");\n  const [isNotChanged, setIsNotChanged] = useState(true);\n  const [open, setOpen] = useState(false);\n  const [redirectOnDelete, setRedirectOnDelete] = useState(true);\n  const [hasLoaded, setHasLoaded] = useState(false);\n  const { isLoggedIn } = props;\n\n  //for scroll to bottom\n  const [height, setHeight] = useState(0)\n  const ref = useRef(null)\n\n  const { id } = useParams()\n  console.log(\"IS LOGGED IN-------\", isLoggedIn);\n\n  const AudioCtx = window.AudioContext || window.webkitAudioContext;\n  const audioCtx = new AudioCtx();\n\n\n  useEffect(() => {\n    axios\n      //grabbing project, and associated songs/stems\n      .get(`http://localhost:8000/api/project/${id}`)\n      .then((data) => {\n        axios\n          //grabbing collections for user\n          .get(`/api/content/${isLoggedIn}`)\n          .then(data2 => {\n            setContent(data.data.projects);\n            setCollectionId(data.data.projects[0].collection_id);\n            setCollections(data2.data.collections)\n          })\n          .then(data2 => {\n            setContent(data.data.projects)\n          })\n          .catch(err => console.log(err))\n      })\n  }, [])\n\n  useEffect(() => {\n    setHeight(ref.current.clientHeight)\n  }, [])\n\n  const project = content[0]\n  let OGcollectionId = project.collection_id\n  let existingNote = project.notes\n\n  const stems = content.map((project) => {\n    const { title, url, icon, peaks_array, name, project_title } = project\n    return { title, url, icon, peaks_array, name, project_title }\n  })\n\n  const saveNote = () => {\n    axios\n      .put(`http://localhost:8000/api/project/${id}`, {\n        notes: note,\n        collection_id: collectionId\n      })\n      .then(() => {\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    saveNote();\n    setIsNotChanged(true);\n  };\n\n  const deleteProject = () => {\n    axios\n      .delete(`http://localhost:8000/api/project/${id}`)\n      .then(() => {\n        console.log(\"DELETED!\")\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const handleAlertOpen = () => {\n    setOpen(true);\n  };\n\n  const handleCancelDelete = () => {\n    setOpen(false);\n  };\n\n  const handleConfirmDelete = () => {\n    deleteProject();\n    setRedirectOnDelete(false);\n  }\n\n\n  return isLoggedIn ? (\n    <div>\n      {!redirectOnDelete ? (\n        <Redirect to=\"/home\" />\n      ) : (\n\n          <div>\n            <div className={classes.mainWindow} ref={ref}>\n              <header className={classes.header}>\n                <Link to=\"/home\">\n                  <ArrowBackIosIcon\n                    className={classes.backArrow}\n                  >Back to Home\n              </ArrowBackIosIcon>\n                </Link>\n\n                <Box className={classes.titleBox}>\n\n                  <Typography component=\"h1\" variant=\"h5\">\n                    {project.project_title}\n                  </Typography>\n                  <Typography variant=\"subtitle1\">\n                    {project.title} - {project.artist}\n                  </Typography>\n\n                </Box>\n              </header>\n\n              <Player className={classes.player} tracks={stems} audioCtx={audioCtx} id=\"player\" setHasLoaded={setHasLoaded}></Player>\n\n              <form\n                className={classes.projectForm}\n                onSubmit={handleSubmit}\n              >\n                <Box className={classes.formBox}>\n                  <AddProjectToCollection\n                    collections={collections}\n                    collectionId={collectionId}\n                    setCollectionId={setCollectionId} >\n                  </AddProjectToCollection>\n\n                  <IconButton aria-label=\"save\" type=\"submit\">\n                    <SaveIcon\n                      className={classes.saveIcon}\n                    >\n                    </SaveIcon>\n                  </IconButton>\n                  <IconButton aria-label=\"delete\" onClick={handleAlertOpen}>\n                    <DeleteForeverIcon\n                      className={classes.saveIcon}\n                    >\n                    </DeleteForeverIcon>\n                  </IconButton>\n                  <ConfirmDelete\n                    open={open}\n                    setOpen={setOpen}\n                    handleAlertOpen={handleAlertOpen}\n                    handleConfirmDelete={handleConfirmDelete}\n                    handleCancelDelete={handleCancelDelete}\n                    name={content[0].project_title}\n                  />\n                </Box>\n\n                {project && <Notes id=\"notes\" projectId={id} existingNote={project.notes} note={note} setNote={setNote} setIsNotChanged={setIsNotChanged} />}\n\n              </form>\n            </div>\n\n            <PlayerTransport tracks={stems} audioCtx={audioCtx} hasLoaded={hasLoaded} />\n            <ProjectNav height={height} />\n\n            <Prompt\n              when={!isNotChanged}\n              message={\"Don't you want to saaaaaaave!?\"}\n            />\n          </div>\n        )}\n    </div >\n  ) : (\n      <Redirect to=\"/\" />\n    );\n}","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Nav.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/ProjectNav.js",["172","173"],"import { Link } from \"react-router-dom\";\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { BottomNavigation, Tab } from '@material-ui/core/';\nimport TuneOutlinedIcon from '@material-ui/icons/TuneOutlined';\nimport HomeIcon from '@material-ui/icons/Home';\nimport BookIcon from '@material-ui/icons/Book';\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n    width: '100%',\n    position: 'fixed',\n    bottom: 0,\n    background: \"rgb(3, 3, 3)\",\n    paddingTop: 10,\n    zIndex: 10\n  }\n});\n\nexport default function ProjectNav(props) {\n  const classes = useStyles();\n  // const [value, setValue] = useState(0);\n\n  const handlePlayerClick = () => {\n    window[`scrollTo`]({ top: 0, behavior: 'smooth' })\n  }\n  const handleNotesClick = () => {\n    window[`scrollTo`]({ top: props.height, behavior: 'smooth' })\n  }\n  const handleGlobalClick = () => {\n    window[`scrollTo`]({ top: props.height, behavior: 'smooth' })\n  }\n\n  return (\n    <BottomNavigation\n      showLabels\n      className={classes.root}\n    >\n      <Tab label=\"Home\" to=\"/home\" icon={<HomeIcon />} component={Link} />\n      <Tab label=\"Player\" icon={<TuneOutlinedIcon />} onClick={handlePlayerClick} />\n      <Tab label=\"Notes\" icon={<BookIcon />} onClick={handleNotesClick} />\n    </BottomNavigation>\n  );\n}\n\n","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Notes.js",["174"],"import { useEffect } from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n\n  notesBox: {\n    background: \"rgb(244, 240, 234)\",\n    width: '100%',\n    marginTop: 10\n  }\n\n}));\n\nexport default function Notes(props) {\n  const classes = useStyles();\n\n\n  const { existingNote, note, setNote, setIsNotChanged } = props;\n\n\n  const handleNote = (event) => {\n    setNote(event.target.value);\n    setIsNotChanged(false);\n  };\n\n  useEffect(() => {\n    setNote(existingNote);\n  }, [existingNote]);\n\n\n\n  return (\n    <div>\n      <TextField\n        className={classes.notesBox}\n        id=\"outlined-multiline-static\"\n        label=\"Project Notes\"\n        multiline\n        rows={10}\n        value={note}\n        onChange={handleNote}\n      />\n    </div>\n\n  )\n}","/Users/romesh/lighthouse/LHL-final-project/client/src/EventEmitter.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/Waveform.js",["175","176"],"import React, { useEffect, useRef, useState } from \"react\";\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { Box, Typography, Input } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport '../RangeInput.css';\n\nimport WaveSurfer from \"wavesurfer.js\";\nimport Emitter from \"../EventEmitter\";\n\n\n\n\n\nexport default function Waveform({\n  track,\n  context,\n  setLoadCounter\n}) {\n\n  const waveformRef = useRef(null);\n  const wavesurfer = useRef(null);\n  const [volume, setVolume] = useState(0.5);\n  const [isMuted, setIsMuted] = useState(false);\n  const [soloed, setSolo] = useState(false);\n\n  const useStyles = makeStyles({\n    box: {\n      display: \"flex\",\n      alignItems: \"center\",\n      color: \"var(--white)\",\n      // width: \"80%\",\n      // justifyContent: \"flex\"\n    },\n    stemTitle: {\n      color: \"var(--white)\",\n      flexBasis: \"50%\",\n      // fontSize: \"1.5em\"\n    },\n    input: {\n      // color: \"primary\"\n    },\n    muteButton: {\n      color: `${!isMuted ? \"var(--primary-color)\" : \"var(--quad-color)\"}`,\n      \"&:hover\": {\n        color: \"var(--white)\",\n        backgroundColor: \"rgba(244, 240, 234, 0.1);\"\n      }\n    },\n    soloButton: {\n      color: `${!soloed ? \"var(--primary-color)\" : \"var(--secondary-color)\"}`,\n      \"&:hover\": {\n        color: \"var(--white)\",\n        backgroundColor: \"rgba(244, 240, 234, 0.1);\"\n      }\n    },\n  });\n  const classes = useStyles()\n\n  const formWaveSurferOptions = (ref) => ({\n    container: ref,\n    waveColor: \"#F5F5DC\",\n    progressColor: \"rgb(245, 103, 93)\",\n    cursorColor: \"rgb(245, 103, 93)\",\n    barMinHeight: 1,\n    barWidth: 3,\n    barRadius: 3,\n    responsive: true,\n    height: 80,\n    // width: \"50%\",\n    // If true, normalize by the maximum peak instead of 1.0.\n    normalize: true,\n    // Use the PeakCache to improve rendering speed of large waveforms.\n    partialRender: true,\n\n    audioContext: context,\n  });\n\n  // create new WaveSurfer instance\n  // On component mount and when url changes\n  useEffect(() => {\n    const options = formWaveSurferOptions(waveformRef.current);\n    wavesurfer.current = WaveSurfer.create(options);\n    wavesurfer.current.solo = false;\n\n    wavesurfer.current.load(track.url);\n\n    wavesurfer.current.on(\"ready\", function () {\n      // make sure object stillavailable when file loaded\n      if (wavesurfer.current) {\n        wavesurfer.current.setVolume(volume);\n        setVolume(volume);\n      }\n      setLoadCounter(prev => prev + 1)\n      Emitter.on(\"clickRewind\", () => wavesurfer.current.seekTo(0));\n      Emitter.on(\"clickPlayPause\", () => wavesurfer.current.playPause());\n    });\n\n    //one for all - when one wavefrom performs a seekTo emit event with currentTime as argument\n    wavesurfer.current.on(\"seek\", function (progress) {\n      //emit seekAll event\n      Emitter.emit(\"seekAll\", wavesurfer.current.getCurrentTime());\n    });\n\n    //update other waveforms with progress from clicked\n    Emitter.on(\"seekAll\", (progress) => {\n      if (progress !== wavesurfer.current.getCurrentTime()) {\n        wavesurfer.current.setCurrentTime(progress);\n      }\n    });\n\n    Emitter.on(\"soloON\", () => {\n      if (!wavesurfer.current.solo && !wavesurfer.current.getMute()) {\n        wavesurfer.current.setMute(true);\n      } else if (!wavesurfer.current.solo && wavesurfer.current.getMute()) {\n        // console.log(`${track.trackName} is not soloed but is muted`);\n      } else if (wavesurfer.current.solo) {\n        wavesurfer.current.setMute(false);\n      }\n    });\n\n    Emitter.on(\"soloOFF\", () => {\n      // console.log(`somone turned a solo OFF.`);\n      //currently checks if it's own solo is off but we need to check if EVERY solo is off\n      wavesurfer.current.solo = false;\n      setSolo(false);\n      if (!wavesurfer.current.wasMuted) {\n        wavesurfer.current.setMute(false);\n        setIsMuted(false);\n      } else {\n        wavesurfer.current.setMute(true);\n        setIsMuted(true);\n      }\n    });\n    // Removes events, elements and disconnects Web Audio nodes.\n    // when component unmount\n    return () => {\n      wavesurfer.current.unAll();\n      wavesurfer.current.destroy();\n    };\n  }, [track.url]);\n\n  const handleMute = () => {\n    setIsMuted(!isMuted);\n    wavesurfer.current.toggleMute();\n    wavesurfer.current.wasMuted = wavesurfer.current.getMute();\n  };\n\n  const handleSolo = () => {\n    setSolo(!soloed);\n    //not soloed and isMuted\n    if (!wavesurfer.current.solo && isMuted) {\n      wavesurfer.current.toggleMute();\n      wavesurfer.current.solo = true;\n      //not soloed and not isMuted\n    } else if (!wavesurfer.current.solo && !isMuted) {\n      wavesurfer.current.solo = true;\n    } else if (wavesurfer.current.solo) {\n      wavesurfer.current.solo = false;\n    }\n\n    // Emitter.emit(`${soloed ? 'soloON' : 'soloOFF'}`)\n  };\n\n  useEffect(() => {\n    Emitter.emit(`${soloed ? \"soloON\" : \"soloOFF\"}`);\n  }, [soloed]);\n\n  const onVolumeChange = (e) => {\n    const { target } = e;\n    const newVolume = +target.value;\n\n    if (newVolume) {\n      setVolume(newVolume);\n      wavesurfer.current.setVolume(newVolume || 1);\n    }\n  };\n\n  return (\n    <div>\n      <div id=\"waveform\" ref={waveformRef} />\n      <Box className={classes.box}>\n        <Typography className={classes.stemTitle} component=\"h3\">\n          {track.name}\n        </Typography>\n\n        <ButtonGroup variant=\"text\" color=\"primary\" aria-label=\"text primary button group\">\n          <Button className={classes.muteButton} onClick={handleMute}>M</Button>\n          <Button className={classes.soloButton} onClick={handleSolo}>S</Button>\n        </ButtonGroup>\n        {/* <button className={!isMuted ? \"mute\" : \"unmute\"} onClick={handleMute}>\n          {\" \"}\n          M\n        </button>\n        <button className={!soloed ? \"solo\" : \"unsolo\"} onClick={handleSolo}>\n          {\" \"}\n          S\n        </button> */}\n        <input\n          type=\"range\"\n          id=\"volume\"\n          name=\"volume\"\n          // waveSurfer recognize value of `0` same as `1`\n          //  so we need to set some zero-ish value for silence\n          min=\"0.01\"\n          max=\"1\"\n          step=\".025\"\n          onChange={onVolumeChange}\n          value={volume}\n        />\n        <label htmlFor=\"volume\"></label>\n      </Box>\n      <hr />\n    </div>\n  );\n}\n",["177","178"],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/NewCollection.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/ProjectCard.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/Player.js",["179","180"],"import React, { useState } from \"react\";\nimport Waveform from \"./Waveform\";\nimport Emitter from \"../EventEmitter\"\n\nconst AudioCtx = window.AudioContext || window.webkitAudioContext;\nconst audioCtx = new AudioCtx();\n\nconst Player = ({ tracks }) => {\n  const [playing, setPlay] = useState(false);\n  const handlePlayPause = () => {\n    setPlay(!playing);\n    Emitter.emit('clickPlayPause', \"\");\n  };\n  const handleRewind = () => {\n    Emitter.emit('clickRewind', setPlay(playing));\n  };\n\n\n  // console.log(\"TRACKS-------\", tracks)\n\n  return (\n    <div className=\"player\">\n      {tracks.map((track, i) => {\n        return track.url && <Waveform key={i} track={track} context={audioCtx} />\n      })};\n      <div id=\"transport\">\n\n        <button onClick={handleRewind}>Rewind</button>\n        <button onClick={handlePlayPause}>{!playing ? \"Play\" : \"Pause\"}</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Player;\n","/Users/romesh/lighthouse/LHL-final-project/client/src/components/NewProject.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/Song.js",["181","182","183"],"import React from \"react\";\nimport { Card, CardActions, CardContent, CardMedia, Grid, Typography, Link } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport classnames from \"classnames\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    transition: \"all .25s linear\",\n    boxShadow: \"0px 2px 2px 0px rgb(245, 103, 93)\",\n    '&:hover': {\n      boxShadow: \"-1px 10px 29px 0px rgb(245, 103, 93)\"\n   },\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n    flexGrow: 1\n  },\n  cardContent: {\n    flexGrow: 1\n  },\n}));\n\nexport default function Album(props) {\n  // const albumInfoClass = classnames(\"album__info\", {\n  //   \"album__info--explicit\": props.collectionExplicitness === \"explicit\"\n  // });\n  const { setSong, songData } = props;\n\n  const handleClick = () => {\n    setSong(songData)\n  }\n\n  const classes = useStyles();\n  return (\n    <Grid item key={props.key} xs={6} sm={6} md={4}>\n      <Card className={classes.card} onClick={handleClick}>\n        <CardMedia\n          className={classes.cardMedia}\n          image={props.artworkUrl100}\n          title={props.trackName}\n          style={useStyles.media}\n        />\n        <CardContent className={classes.cardContent}>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {props.trackName}\n          </Typography>\n          <Typography>\n            {props.artistName}\n          </Typography>\n          <Typography>\n            {props.collectionName}\n          </Typography>\n        </CardContent>\n      </Card>\n    </Grid>\n  )\n}\n","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Results.js",["184"],"import { Fragment } from \"react\";\nimport SongPreview from \"./SongPreview\"\n\nimport Song from \"./Song\";\n\nexport default function Results(props) {\n  const { results, setSong } = props;\n\n\n\n  return results.map(song => {\n    return (\n      <Fragment>\n        <Song\n          setSong={setSong}\n          key={song.trackId}\n          {...song}\n          songData={song}\n          width={1 / 4} />\n\n      </ Fragment>\n    );\n  });\n}\n","/Users/romesh/lighthouse/LHL-final-project/client/src/components/SongPreview.js",["185","186","187","188","189","190","191","192","193"],"import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport { CardContent, CardMedia, IconButton, Typography, Grid, Button, Box } from '@material-ui/core';\nimport { SkipPrevious, PlayArrow, SkipNext } from '@material-ui/icons';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport { Link, Redirect } from \"react-router-dom\";\nimport NewProject from \"./NewProject\"\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex'\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  content: {\n    flex: '1 0 auto',\n  },\n  cover: {\n    width: 151,\n  },\n  controls: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingLeft: theme.spacing(1),\n\n    paddingBottom: theme.spacing(1),\n  },\n  playIcon: {\n    height: 38,\n    width: 38,\n  },\n}));\n\nexport default function SongPreview(props) {\n  const { trackName, previewUrl, artistName, artworkUrl100, trackId } = props.results;\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const handlePreview = () => {\n    //do some stuff\n    console.log(previewUrl);\n  }\n\n  const handleClick = () => {\n    props.setSong({})\n  }\n  console.log(`artwork url is`, artworkUrl100)\n\n  return (\n    <div>\n      <header className={classes.header}>\n\n        <ArrowBackIosIcon\n          className={classes.backArrow}\n          onClick={handleClick}\n        >Back to Home\n            </ArrowBackIosIcon>\n\n\n        <Box className={classes.titleBox}>\n\n          <Typography component=\"h1\" variant=\"h5\">\n            Search\n          </Typography>\n\n        </Box>\n      </header>\n\n      <Grid item key={props.id} xs={12}>\n        <Card className={classes.root}>\n          <div className={classes.details}>\n            <CardContent className={classes.content}>\n              <CardMedia\n                className={classes.cover}\n                image={artworkUrl100}\n                title={trackName}\n                style={useStyles.media}\n              />\n              <Typography component=\"h5\" variant=\"h5\">\n                {trackName}\n              </Typography>\n              <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                {artistName}\n              </Typography>\n            </CardContent>\n            {/* <div className={classes.controls}>\n            <IconButton aria-label=\"previous\">\n              {theme.direction === 'rtl' ? <SkipNext /> : <SkipPrevious />}\n            </IconButton>\n            <IconButton aria-label=\"play/pause\">\n              <PlayArrow className={classes.playIcon} onClick={handlePreview} />\n            </IconButton>\n            <IconButton aria-label=\"next\">\n              {theme.direction === 'rtl' ? <SkipPrevious /> : <SkipNext />}\n            </IconButton>\n          </div> */}\n            <CardMedia\n              component=\"audio\"\n              image={previewUrl}\n              title='title'\n              controls\n            />\n          </div>\n          <button class=\"btn-btn danger\" onClick={handleClick}>Cancel</button>\n\n        </Card >\n        <NewProject songId={trackId} user={props.user} />\n\n      </Grid >\n    </div>\n  );\n}","/Users/romesh/lighthouse/LHL-final-project/client/src/components/AddProjectToCollection.js",["194","195"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { InputLabel, FormHelperText, FormControl, NativeSelect } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n\n    width: '80%',\n    color: \"#ffffff\",\n    background: \"rgb(244, 240, 234)\"\n  },\n  selectEmpty: {\n    // marginTop: theme.spacing(1),\n  },\n}));\n\nexport default function AddProjectToCollection(props) {\n  const { collections, setCollectionId, collectionId } = props\n  const classes = useStyles();\n\n  const handleChange = (event) => {\n    setCollectionId(event.target.value)\n  };\n\n  return (\n\n    <FormControl className={classes.formControl}>\n      {/* <InputLabel htmlFor=\"Save-Project-To-Collection\">Save project to collection</InputLabel> */}\n      <NativeSelect\n        id=\"Save-Project-To-Collection\"\n        aria-label=\"Save-Prooject-To-Collection\"\n        value={collectionId}\n        onChange={handleChange}\n        inputProps={{\n          name: 'Add to Collection'\n        }}\n      >\n        <option aria-label=\"No Collection\" value=\"\">-- No Collection --</option>\n        {collections.map((collection, i) => {\n          return <option key={i} value={collection.id}>{collection.name}</option>\n        })}\n\n      </NativeSelect>\n    </FormControl>\n  )\n\n}","/Users/romesh/lighthouse/LHL-final-project/client/src/components/PlayerTransport.js",["196"],"import React, { useState } from \"react\";\nimport Emitter from \"../EventEmitter\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport PlayArrow from '@material-ui/icons/PlayArrow';\nimport Pause from '@material-ui/icons/Pause';\nimport FastRewindIcon from '@material-ui/icons/FastRewind';\nimport { Icon } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    position: 'fixed',\n    bottom: 65,\n    background: \"#1a1a1a;\",\n    zIndex: 10,\n    color: \"rgb(244, 240, 234)\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    padding: 5,\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n  icon: {\n    marginLeft: 10,\n    marginRight: 20,\n    fontSize: 50,\n    color: \"var(--white)\"\n  },\n  progressBar: {\n    height: 100,\n    color: \"white\"\n  }\n}));\n\nexport default function PlayerTransport({ hasLoaded }) {\n  const classes = useStyles();\n  const [playing, setPlay] = useState(false);\n  const handlePlayPause = () => {\n    if (hasLoaded) {\n      setPlay(!playing);\n      Emitter.emit('clickPlayPause', \"\");\n    }\n  };\n  const handleRewind = () => {\n    if (hasLoaded) {\n      Emitter.emit('clickRewind', setPlay(playing));\n    }\n  };\n\n\n  // console.log(\"TRACKS-------\", tracks)\n\n  return (\n    <div id=\"transport\" className={classes.root}>\n      {/* <LinearProgress className={classes.progressBar} /> */}\n      <div>\n        <IconButton onClick={handleRewind} aria-label=\"Rewind\">\n          <FastRewindIcon className={classes.icon} />\n        </IconButton>\n\n        <IconButton className={classes.icon} aria-label=\"Play/Pause\" onClick={handlePlayPause}>\n          {playing ? <Pause className={classes.icon} /> : <PlayArrow className={classes.icon} />}\n        </IconButton>\n      </div>\n\n    </div>\n  );\n};\n\n","/Users/romesh/lighthouse/LHL-final-project/client/src/hooks/useDebounce.js",["197"],"import { useState, useEffect } from 'react';\n\n// Our hook\nexport default function useDebounce(value, delay) {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(\n    () => {\n      // Set debouncedValue to value (passed in) after the specified delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n\n      // cleanup\n      return () => {\n        clearTimeout(handler);\n      };\n    }, [value]\n  );\n\n  return debouncedValue;\n}","/Users/romesh/lighthouse/LHL-final-project/client/src/components/ConfirmDelete.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/NewCollectionCard.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/LoginError.js",["198","199","200"],"import React, { useState } from 'react';\nimport {Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\n\nexport default function LoginError(props) {\n\n  return (\n    <div>\n      <Dialog\n        open={props.open}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"ERROR\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Looks like {props.emailError ? props.emailError : props.passError}\n          </DialogContentText>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n  \n}","/Users/romesh/lighthouse/LHL-final-project/client/src/components/RegError.js",[],{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","severity":1,"message":"206","line":2,"column":50,"nodeType":"207","messageId":"208","endLine":2,"endColumn":54},{"ruleId":"205","severity":1,"message":"209","line":2,"column":56,"nodeType":"207","messageId":"208","endLine":2,"endColumn":65},{"ruleId":"205","severity":1,"message":"210","line":4,"column":8,"nodeType":"207","messageId":"208","endLine":4,"endColumn":13},{"ruleId":"205","severity":1,"message":"211","line":9,"column":8,"nodeType":"207","messageId":"208","endLine":9,"endColumn":14},{"ruleId":"205","severity":1,"message":"212","line":10,"column":8,"nodeType":"207","messageId":"208","endLine":10,"endColumn":13},{"ruleId":"205","severity":1,"message":"213","line":21,"column":8,"nodeType":"207","messageId":"208","endLine":21,"endColumn":19},{"ruleId":"205","severity":1,"message":"214","line":42,"column":10,"nodeType":"207","messageId":"208","endLine":42,"endColumn":16},{"ruleId":"205","severity":1,"message":"215","line":42,"column":18,"nodeType":"207","messageId":"208","endLine":42,"endColumn":27},{"ruleId":"205","severity":1,"message":"216","line":6,"column":8,"nodeType":"207","messageId":"208","endLine":6,"endColumn":24},{"ruleId":"217","severity":1,"message":"218","line":146,"column":11,"nodeType":"219","endLine":146,"endColumn":46},{"ruleId":"205","severity":1,"message":"220","line":1,"column":17,"nodeType":"207","messageId":"208","endLine":1,"endColumn":25},{"ruleId":"205","severity":1,"message":"221","line":5,"column":8,"nodeType":"207","messageId":"208","endLine":5,"endColumn":18},{"ruleId":"205","severity":1,"message":"222","line":6,"column":8,"nodeType":"207","messageId":"208","endLine":6,"endColumn":21},{"ruleId":"205","severity":1,"message":"223","line":8,"column":10,"nodeType":"207","messageId":"208","endLine":8,"endColumn":18},{"ruleId":"205","severity":1,"message":"224","line":12,"column":10,"nodeType":"207","messageId":"208","endLine":12,"endColumn":27},{"ruleId":"205","severity":1,"message":"225","line":45,"column":10,"nodeType":"207","messageId":"208","endLine":45,"endColumn":21},{"ruleId":"226","severity":1,"message":"227","line":100,"column":6,"nodeType":"228","endLine":100,"endColumn":27,"suggestions":"229"},{"ruleId":"226","severity":1,"message":"230","line":56,"column":6,"nodeType":"228","endLine":56,"endColumn":27,"suggestions":"231"},{"ruleId":"205","severity":1,"message":"232","line":5,"column":48,"nodeType":"207","messageId":"208","endLine":5,"endColumn":53},{"ruleId":"205","severity":1,"message":"216","line":6,"column":8,"nodeType":"207","messageId":"208","endLine":6,"endColumn":24},{"ruleId":"217","severity":1,"message":"218","line":164,"column":9,"nodeType":"219","endLine":164,"endColumn":44},{"ruleId":"226","severity":1,"message":"233","line":101,"column":6,"nodeType":"228","endLine":101,"endColumn":8,"suggestions":"234"},{"ruleId":"226","severity":1,"message":"235","line":103,"column":3,"nodeType":"207","endLine":103,"endColumn":12,"suggestions":"236"},{"ruleId":"205","severity":1,"message":"237","line":108,"column":7,"nodeType":"207","messageId":"208","endLine":108,"endColumn":21},{"ruleId":"205","severity":1,"message":"238","line":109,"column":7,"nodeType":"207","messageId":"208","endLine":109,"endColumn":19},{"ruleId":"205","severity":1,"message":"239","line":3,"column":17,"nodeType":"207","messageId":"208","endLine":3,"endColumn":25},{"ruleId":"205","severity":1,"message":"240","line":34,"column":9,"nodeType":"207","messageId":"208","endLine":34,"endColumn":26},{"ruleId":"226","severity":1,"message":"241","line":29,"column":6,"nodeType":"228","endLine":29,"endColumn":20,"suggestions":"242"},{"ruleId":"205","severity":1,"message":"232","line":5,"column":27,"nodeType":"207","messageId":"208","endLine":5,"endColumn":32},{"ruleId":"226","severity":1,"message":"243","line":143,"column":6,"nodeType":"228","endLine":143,"endColumn":17,"suggestions":"244"},{"ruleId":"201","replacedBy":"245"},{"ruleId":"203","replacedBy":"246"},{"ruleId":"205","severity":1,"message":"239","line":1,"column":17,"nodeType":"207","messageId":"208","endLine":1,"endColumn":25},{"ruleId":"205","severity":1,"message":"247","line":6,"column":8,"nodeType":"207","messageId":"208","endLine":6,"endColumn":15},{"ruleId":"205","severity":1,"message":"248","line":2,"column":16,"nodeType":"207","messageId":"208","endLine":2,"endColumn":27},{"ruleId":"205","severity":1,"message":"206","line":2,"column":71,"nodeType":"207","messageId":"208","endLine":2,"endColumn":75},{"ruleId":"205","severity":1,"message":"249","line":5,"column":8,"nodeType":"207","messageId":"208","endLine":5,"endColumn":18},{"ruleId":"205","severity":1,"message":"213","line":2,"column":8,"nodeType":"207","messageId":"208","endLine":2,"endColumn":19},{"ruleId":"205","severity":1,"message":"250","line":4,"column":34,"nodeType":"207","messageId":"208","endLine":4,"endColumn":44},{"ruleId":"205","severity":1,"message":"251","line":4,"column":64,"nodeType":"207","messageId":"208","endLine":4,"endColumn":70},{"ruleId":"205","severity":1,"message":"252","line":5,"column":10,"nodeType":"207","messageId":"208","endLine":5,"endColumn":22},{"ruleId":"205","severity":1,"message":"253","line":5,"column":24,"nodeType":"207","messageId":"208","endLine":5,"endColumn":33},{"ruleId":"205","severity":1,"message":"254","line":5,"column":35,"nodeType":"207","messageId":"208","endLine":5,"endColumn":43},{"ruleId":"205","severity":1,"message":"206","line":7,"column":10,"nodeType":"207","messageId":"208","endLine":7,"endColumn":14},{"ruleId":"205","severity":1,"message":"223","line":7,"column":16,"nodeType":"207","messageId":"208","endLine":7,"endColumn":24},{"ruleId":"205","severity":1,"message":"255","line":41,"column":9,"nodeType":"207","messageId":"208","endLine":41,"endColumn":14},{"ruleId":"205","severity":1,"message":"256","line":43,"column":9,"nodeType":"207","messageId":"208","endLine":43,"endColumn":22},{"ruleId":"205","severity":1,"message":"257","line":3,"column":10,"nodeType":"207","messageId":"208","endLine":3,"endColumn":20},{"ruleId":"205","severity":1,"message":"258","line":3,"column":22,"nodeType":"207","messageId":"208","endLine":3,"endColumn":36},{"ruleId":"205","severity":1,"message":"259","line":10,"column":10,"nodeType":"207","messageId":"208","endLine":10,"endColumn":14},{"ruleId":"226","severity":1,"message":"260","line":19,"column":8,"nodeType":"228","endLine":19,"endColumn":15,"suggestions":"261"},{"ruleId":"205","severity":1,"message":"239","line":1,"column":17,"nodeType":"207","messageId":"208","endLine":1,"endColumn":25},{"ruleId":"205","severity":1,"message":"251","line":2,"column":9,"nodeType":"207","messageId":"208","endLine":2,"endColumn":15},{"ruleId":"205","severity":1,"message":"262","line":2,"column":25,"nodeType":"207","messageId":"208","endLine":2,"endColumn":38},"no-native-reassign",["263"],"no-negated-in-lhs",["264"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useParams' is defined but never used.","'axios' is defined but never used.","'purple' is defined but never used.","'green' is defined but never used.","'SongPreview' is defined but never used.","'tracks' is assigned a value but never used.","'setTracks' is assigned a value but never used.","'ArrowBackIosIcon' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Fragment' is defined but never used.","'NewProject' is defined but never used.","'NewCollection' is defined but never used.","'Redirect' is defined but never used.","'TextFormatTwoTone' is defined but never used.","'isSearching' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'term'. Either include it or remove the dependency array.","ArrayExpression",["265"],"React Hook useEffect has a missing dependency: 'setRefresh'. Either include it or remove the dependency array.",["266"],"'Input' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'isLoggedIn'. Either include them or remove the dependency array.",["267"],"React Hook useEffect contains a call to 'setHeight'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["268"],"'OGcollectionId' is assigned a value but never used.","'existingNote' is assigned a value but never used.","'useState' is defined but never used.","'handleGlobalClick' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setNote'. Either include it or remove the dependency array.",["269"],"React Hook useEffect has missing dependencies: 'formWaveSurferOptions' and 'volume'. Either include them or remove the dependency array. You can also do a functional update 'setVolume(v => ...)' if you only need 'volume' in the 'setVolume' call.",["270"],["263"],["264"],"'Emitter' is defined but never used.","'CardActions' is defined but never used.","'classnames' is defined but never used.","'IconButton' is defined but never used.","'Button' is defined but never used.","'SkipPrevious' is defined but never used.","'PlayArrow' is defined but never used.","'SkipNext' is defined but never used.","'theme' is assigned a value but never used.","'handlePreview' is assigned a value but never used.","'InputLabel' is defined but never used.","'FormHelperText' is defined but never used.","'Icon' is defined but never used.","React Hook useEffect has a missing dependency: 'delay'. Either include it or remove the dependency array.",["271"],"'DialogActions' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},"Update the dependencies array to be: [debouncedSearchTerm, term]",{"range":"286","text":"287"},"Update the dependencies array to be: [refresh, isLoggedIn, setRefresh]",{"range":"288","text":"289"},"Update the dependencies array to be: [id, isLoggedIn]",{"range":"290","text":"291"},"Add dependencies array: []",{"range":"292","text":"293"},"Update the dependencies array to be: [existingNote, setNote]",{"range":"294","text":"295"},"Update the dependencies array to be: [formWaveSurferOptions, track.url, volume]",{"range":"296","text":"297"},"Update the dependencies array to be: [delay, value]",{"range":"298","text":"299"},[3080,3101],"[debouncedSearchTerm, term]",[1465,1486],"[refresh, isLoggedIn, setRefresh]",[2827,2829],"[id, isLoggedIn]",[2895,2895],", []",[581,595],"[existingNote, setNote]",[4201,4212],"[formWaveSurferOptions, track.url, volume]",[495,502],"[delay, value]"]