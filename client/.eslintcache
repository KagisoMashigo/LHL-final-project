[{"/Users/romesh/lighthouse/LHL-final-project/client/src/index.js":"1","/Users/romesh/lighthouse/LHL-final-project/client/src/reportWebVitals.js":"2","/Users/romesh/lighthouse/LHL-final-project/client/src/App.js":"3","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Entry.js":"4","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Project.js":"5","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Login.js":"6","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Gear.js":"7","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Search.js":"8","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Library.js":"9","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Home.js":"10","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Collection.js":"11","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Register.js":"12","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Player.js":"13","/Users/romesh/lighthouse/LHL-final-project/client/src/components/ProjectNav.js":"14","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Nav.js":"15","/Users/romesh/lighthouse/LHL-final-project/client/src/EventEmitter.js":"16","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Waveform.js":"17"},{"size":500,"mtime":1610731422925,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1610731422926,"results":"20","hashOfConfig":"19"},{"size":2372,"mtime":1610925085891,"results":"21","hashOfConfig":"19"},{"size":292,"mtime":1610925085891,"results":"22","hashOfConfig":"19"},{"size":360,"mtime":1610925085892,"results":"23","hashOfConfig":"19"},{"size":627,"mtime":1610925085892,"results":"24","hashOfConfig":"19"},{"size":275,"mtime":1610925085891,"results":"25","hashOfConfig":"19"},{"size":141,"mtime":1610925085892,"results":"26","hashOfConfig":"19"},{"size":148,"mtime":1610925085891,"results":"27","hashOfConfig":"19"},{"size":798,"mtime":1610925085891,"results":"28","hashOfConfig":"19"},{"size":81,"mtime":1610925085891,"results":"29","hashOfConfig":"19"},{"size":2026,"mtime":1610930133594,"results":"30","hashOfConfig":"19"},{"size":861,"mtime":1610902823734,"results":"31","hashOfConfig":"19"},{"size":202,"mtime":1610925085892,"results":"32","hashOfConfig":"19"},{"size":234,"mtime":1610925085892,"results":"33","hashOfConfig":"19"},{"size":597,"mtime":1610891500528,"results":"34","hashOfConfig":"19"},{"size":4868,"mtime":1610925085892,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1wqprfu",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"38"},"/Users/romesh/lighthouse/LHL-final-project/client/src/index.js",[],["73","74"],"/Users/romesh/lighthouse/LHL-final-project/client/src/reportWebVitals.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/App.js",["75"],"import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nimport Project from \"./components/Project\";\nimport Entry from \"./components/Entry\";\nimport Login from \"./components/Login\";\nimport Gear from \"./components/Gear\";\nimport Search from \"./components/Search\";\nimport Register from \"./components/Register\";\nimport Library from \"./components/Library\";\nimport Home from \"./components/Home\";\nimport Collection from \"./components/Collection\";\n\n// hardcoded track data\n// const oldtracks = [\n//   {\n//     id: 0,\n//     title: \"Guitar\",\n//     url:\n//       \"https://rykabrown.com/wp-content/uploads/2021/01/BURIAL-GROUND_guitar_main.mp3\",\n//   },\n//   {\n//     id: 1,\n//     title: \"DRUMS\",\n//     url:\n//       \"https://rykabrown.com/wp-content/uploads/2021/01/BURIAL_GROUND_drums.mp3\",\n//   },\n//   {\n//     id: 2,\n//     title: \"LEAD VOCALS\",\n//     url:\n//       \"https://rykabrown.com/wp-content/uploads/2021/01/BURIAL-GROUND_lead_vocal.mp3\",\n//   },\n//   {\n//     id: 2,\n//     title: \"BASS\",\n//     url:\n//       \"https://rykabrown.com/wp-content/uploads/2021/01/BURIAL_GROUND_bass.mp3\",\n//   },\n// ];\n\nexport default function App() {\n  const [tracks, setTracks] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(`http://localhost:8000/api/stems`)\n      .then((res) => {\n        // console.log(`from get request`, res.data.stems)\n        setTracks(res.data.stems);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/register\">\n            <Register />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/home\">\n            <Home />\n          </Route>\n          <Route path=\"/gear\">\n            <Gear />\n          </Route>\n          <Route path=\"/library\">\n            <Library />\n          </Route>\n          <Route path=\"/collection\">\n            <Collection />\n          </Route>\n          <Route path=\"/search\">\n            <Search />\n          </Route>\n          <Route path=\"/project\">\n            <Project tracks={tracks} />\n          </Route>\n          <Route path=\"/\">\n            <Entry />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Entry.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/Project.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/Login.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/Gear.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/Search.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/Library.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/Home.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/Collection.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/Register.js",["76"],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/Player.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/ProjectNav.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/Nav.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/EventEmitter.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/Waveform.js",["77"],"import React, { useEffect, useRef, useState } from \"react\";\n\nimport WaveSurfer from \"wavesurfer.js\";\nimport Emitter from \"../EventEmitter\";\n\nexport default function Waveform({\n  track,\n  context,\n  setSoloCounter,\n  soloCounter,\n}) {\n  const waveformRef = useRef(null);\n  const wavesurfer = useRef(null);\n  const [volume, setVolume] = useState(0.5);\n  const [isMuted, setIsMuted] = useState(false);\n  const [soloed, setSolo] = useState(false);\n\n  const formWaveSurferOptions = (ref) => ({\n    container: ref,\n    waveColor: \"#F5F5DC\",\n    progressColor: \"rgb(245, 103, 93)\",\n    cursorColor: \"rgb(245, 103, 93)\",\n    barWidth: 3,\n    barRadius: 3,\n    responsive: true,\n    height: 150,\n    // If true, normalize by the maximum peak instead of 1.0.\n    normalize: true,\n    // Use the PeakCache to improve rendering speed of large waveforms.\n    partialRender: true,\n    audioContext: context,\n  });\n\n  // create new WaveSurfer instance\n  // On component mount and when url changes\n  useEffect(() => {\n    const options = formWaveSurferOptions(waveformRef.current);\n    wavesurfer.current = WaveSurfer.create(options);\n    wavesurfer.current.solo = false;\n\n    wavesurfer.current.load(track.url);\n\n    wavesurfer.current.on(\"ready\", function () {\n      // make sure object stillavailable when file loaded\n      if (wavesurfer.current) {\n        wavesurfer.current.setVolume(volume);\n        setVolume(volume);\n      }\n\n      Emitter.on(\"clickRewind\", () => wavesurfer.current.seekTo(0));\n      Emitter.on(\"clickPlayPause\", () => wavesurfer.current.playPause());\n    });\n\n    //one for all - when one wavefrom performs a seekTo emit event with currentTime as argument\n    wavesurfer.current.on(\"seek\", function (progress) {\n      //emit seekAll event\n      Emitter.emit(\"seekAll\", wavesurfer.current.getCurrentTime());\n    });\n\n    //update other waveforms with progress from clicked\n    Emitter.on(\"seekAll\", (progress) => {\n      if (progress !== wavesurfer.current.getCurrentTime()) {\n        wavesurfer.current.setCurrentTime(progress);\n      }\n    });\n\n    Emitter.on(\"soloON\", () => {\n      if (!wavesurfer.current.solo && !wavesurfer.current.getMute()) {\n        wavesurfer.current.setMute(true);\n      } else if (!wavesurfer.current.solo && wavesurfer.current.getMute()) {\n        console.log(`${track.name} is not soloed but is muted`);\n      } else if (wavesurfer.current.solo) {\n        wavesurfer.current.setMute(false);\n      }\n    });\n\n    Emitter.on(\"soloOFF\", () => {\n      console.log(`somone turned a solo OFF.`);\n      //currently checks if it's own solo is off but we need to check if EVERY solo is off\n      wavesurfer.current.solo = false;\n      setSolo(false);\n      if (!wavesurfer.current.wasMuted) {\n        wavesurfer.current.setMute(false);\n        setIsMuted(false);\n      } else {\n        wavesurfer.current.setMute(true);\n        setIsMuted(true);\n      }\n    });\n    // Removes events, elements and disconnects Web Audio nodes.\n    // when component unmount\n    return () => {\n      wavesurfer.current.unAll();\n      wavesurfer.current.destroy();\n    };\n  }, [track.url]);\n\n  const handleMute = () => {\n    setIsMuted(!isMuted);\n    wavesurfer.current.toggleMute();\n    wavesurfer.current.wasMuted = wavesurfer.current.getMute();\n  };\n\n  const handleSolo = () => {\n    setSolo(!soloed);\n    //not soloed and isMuted\n    if (!wavesurfer.current.solo && isMuted) {\n      wavesurfer.current.toggleMute();\n      wavesurfer.current.solo = true;\n      //not soloed and not isMuted\n    } else if (!wavesurfer.current.solo && !isMuted) {\n      wavesurfer.current.solo = true;\n    } else if (wavesurfer.current.solo) {\n      wavesurfer.current.solo = false;\n    }\n\n    // Emitter.emit(`${soloed ? 'soloON' : 'soloOFF'}`)\n  };\n\n  useEffect(() => {\n    Emitter.emit(`${soloed ? \"soloON\" : \"soloOFF\"}`);\n  }, [soloed]);\n\n  const onVolumeChange = (e) => {\n    const { target } = e;\n    const newVolume = +target.value;\n\n    if (newVolume) {\n      setVolume(newVolume);\n      wavesurfer.current.setVolume(newVolume || 1);\n    }\n  };\n\n  return (\n    <div>\n      <div id=\"waveform\" ref={waveformRef} />\n      <div className=\"controls\">\n        <h2>{track.name}</h2>\n        <button className={!isMuted ? \"mute\" : \"unmute\"} onClick={handleMute}>\n          {\" \"}\n          M\n        </button>\n        <button className={!soloed ? \"solo\" : \"unsolo\"} onClick={handleSolo}>\n          {\" \"}\n          S\n        </button>\n        <input\n          type=\"range\"\n          id=\"volume\"\n          name=\"volume\"\n          // waveSurfer recognize value of `0` same as `1`\n          //  so we need to set some zero-ish value for silence\n          min=\"0.01\"\n          max=\"1\"\n          step=\".025\"\n          onChange={onVolumeChange}\n          defaultValue={volume}\n        />\n        <label htmlFor=\"volume\">Volume</label>\n      </div>\n      <hr />\n    </div>\n  );\n}\n",{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":2,"column":50,"nodeType":"84","messageId":"85","endLine":2,"endColumn":54},{"ruleId":"82","severity":1,"message":"86","line":10,"column":10,"nodeType":"84","messageId":"85","endLine":10,"endColumn":14},{"ruleId":"87","severity":1,"message":"88","line":96,"column":6,"nodeType":"89","endLine":96,"endColumn":17,"suggestions":"90"},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'formWaveSurferOptions', 'track.name', and 'volume'. Either include them or remove the dependency array. You can also do a functional update 'setVolume(v => ...)' if you only need 'volume' in the 'setVolume' call.","ArrayExpression",["93"],"no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},"Update the dependencies array to be: [formWaveSurferOptions, track.name, track.url, volume]",{"range":"96","text":"97"},[3090,3101],"[formWaveSurferOptions, track.name, track.url, volume]"]