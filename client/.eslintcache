[{"/Users/romesh/lighthouse/LHL-final-project/client/src/index.js":"1","/Users/romesh/lighthouse/LHL-final-project/client/src/reportWebVitals.js":"2","/Users/romesh/lighthouse/LHL-final-project/client/src/App.js":"3","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Entry.js":"4","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Login.js":"5","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Gear.js":"6","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Search.js":"7","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Home.js":"8","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Library.js":"9","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Collection.js":"10","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Register.js":"11","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Project.js":"12","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Nav.js":"13","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Player.js":"14","/Users/romesh/lighthouse/LHL-final-project/client/src/components/ProjectNav.js":"15","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Notes.js":"16","/Users/romesh/lighthouse/LHL-final-project/client/src/EventEmitter.js":"17","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Waveform.js":"18","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Results.js":"19","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Song.js":"20"},{"size":500,"mtime":1610731422925,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1610731422926,"results":"23","hashOfConfig":"22"},{"size":2032,"mtime":1611086613260,"results":"24","hashOfConfig":"22"},{"size":292,"mtime":1611063459267,"results":"25","hashOfConfig":"22"},{"size":1675,"mtime":1611063459267,"results":"26","hashOfConfig":"22"},{"size":866,"mtime":1611065867513,"results":"27","hashOfConfig":"22"},{"size":2066,"mtime":1611100755334,"results":"28","hashOfConfig":"22"},{"size":1228,"mtime":1611018995138,"results":"29","hashOfConfig":"22"},{"size":271,"mtime":1611018995138,"results":"30","hashOfConfig":"22"},{"size":209,"mtime":1611018995138,"results":"31","hashOfConfig":"22"},{"size":2194,"mtime":1611077328831,"results":"32","hashOfConfig":"22"},{"size":1169,"mtime":1611086613261,"results":"33","hashOfConfig":"22"},{"size":234,"mtime":1610925085892,"results":"34","hashOfConfig":"22"},{"size":874,"mtime":1611018995138,"results":"35","hashOfConfig":"22"},{"size":202,"mtime":1610925085892,"results":"36","hashOfConfig":"22"},{"size":957,"mtime":1611086613260,"results":"37","hashOfConfig":"22"},{"size":597,"mtime":1610891500528,"results":"38","hashOfConfig":"22"},{"size":4868,"mtime":1610925085892,"results":"39","hashOfConfig":"22"},{"size":309,"mtime":1611089514525,"results":"40","hashOfConfig":"22"},{"size":789,"mtime":1611086613261,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1wqprfu",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/Users/romesh/lighthouse/LHL-final-project/client/src/index.js",[],["90","91"],"/Users/romesh/lighthouse/LHL-final-project/client/src/reportWebVitals.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/App.js",["92","93","94","95","96"],"import React, { useState, useEffect} from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link, useParams } from \"react-router-dom\";\n// import UserInfo from '../UserInfo';\nimport axios from \"axios\";\nimport \"./App.css\";\nimport Project from \"./components/Project\";\nimport Entry from \"./components/Entry\";\nimport Login from \"./components/Login\";\nimport Gear from \"./components/Gear\";\nimport Search from \"./components/Search\";\nimport Register from \"./components/Register\";\nimport Library from \"./components/Library\";\nimport Home from \"./components/Home\";\nimport Collection from \"./components/Collection\";\n\nexport default function App() {\n  const [tracks, setTracks] = useState([]);\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const localUser = localStorage.getItem(\"user\") || null\n    setUser(localUser)\n  }, [])\n// instead of local, have use effect thatt uses on mount to send axios req to backend \n  useEffect(() => {\n    localStorage.setItem(\"user\", user)\n  }, [user])\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/home\">\n            <Home isLoggedIn={user} />\n          </Route>\n          <Route path=\"/gear\">\n            <Gear isLoggedIn={user} setUser={setUser} />\n          </Route>\n          <Route path=\"/library\">\n            <Library isLoggedIn={user} />\n          </Route>\n          <Route path=\"/collection\">\n            <Collection isLoggedIn={user} />\n          </Route>\n          <Route path=\"/search\">\n            <Search isLoggedIn={user} />\n          </Route>\n          <Route path=\"/project/:id\">\n            <Project isLoggedIn={user}/>\n          </Route>\n          <Route path=\"/register\">\n            <Register isLoggedIn={user} setUser={setUser} />\n          </Route>\n          <Route path=\"/login\">\n            <Login isLoggedIn={user} setUser={setUser} />\n          </Route>\n          <Route path=\"/\">\n            <Entry />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\n// routing system that usee state","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Entry.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/Login.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/Gear.js",["97"],"import axios from \"axios\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { Fragment } from \"react\";\n\nexport default function Gear(props) {\n  const { isLoggedIn, setUser } = props;\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(`in handleSubmit. event is `, event);\n    logoutUser(); // Save games when form is submitted\n  };\n\n  const logoutUser = () => {\n    axios\n      .get(\"/api/users/logout\")\n      .then((res) => {\n        console.log(`user is logged out. check cookies to confirm!`);\n        setUser(null);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  return isLoggedIn ? (\n    <div>\n      <Link to=\"/home\">Home</Link>\n      <h1>I AM Gear/ Settings</h1>\n      <form onSubmit={handleSubmit}>\n        <button type=\"submit\">LOGOUT</button>\n      </form>\n    </div>\n  ) : (\n    <Redirect to=\"/\" />\n  );\n}\n","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Search.js",["98","99"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Nav from \"./Nav\";\nimport Results from \"./Results\";\nimport { Redirect } from \"react-router-dom\";\nimport { DialogTitle, TextField } from '@material-ui/core';\n\n\n\nexport default function Search(props) {\n  const { isLoggedIn } = props;\n  const [term, setTerm] = useState(\"\");\n  const [results, setResults] = useState([]);\n\n\n  //SEARCH QUERY\n  useEffect(() => {\n    axios({\n      //gets fill data from itunes\n      method: 'get',\n      url: `https://itunes.apple.com/search?term=${term.toLowerCase()}&country=CA&media=music&entity=song`\n    })\n      //gets our actual db data\n      .then(data1 => {\n        axios.get(`api/content/search/${term.toLowerCase()}`)\n          .then(data2 => {\n            // console.log(`data1 is: `, data1.data.results)\n            // console.log(`you hit the search content route. data2 is: `, data2.data)\n            const response = []\n            if (data2.data.length > 0) {\n              const data2formatted = data2.data.map(entry => {\n                return {\n                  trackId: entry.id,\n                  artistName: entry.artist,\n                  artworkUrl100: entry.url_album_artwork,\n                  trackName: entry.title,\n                  collectionName: entry.album,\n                  url_full_song_preview: entry.url_full_song_preview\n                }\n              })\n              response.push(...data2formatted)\n            }\n            response.push(...data1.data.results)\n            console.log(`response is `, response)\n            setResults(response)\n          })\n          .catch(err => console.log(err))\n      })\n  }, [term])\n\n  const handleChange = (event) => {\n    setTerm(event.target.value)\n  }\n\n  return isLoggedIn ? (\n    <div>\n      <h1>I AM Search</h1>\n      <TextField variant=\"filled\" value={term} onChange={handleChange} color=\"primary\"></TextField>\n      {/* <p>{results}</p> */}\n      <Results results={results}></Results>\n      <Nav />\n    </div>\n  ) : (\n      <Redirect to=\"/\" />\n    );\n}","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Home.js",["100"],"import { useState, useEffect } from 'react';\nimport { Link, Redirect } from \"react-router-dom\";\nimport Nav from \"./Nav\";\nimport axios from 'axios';\n\nexport default function Home(props) {\n  const { isLoggedIn } = props;\n\n  const [collections, setCollections] = useState([])\n  const [projects, setProjects] = useState([])\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      axios\n      .get('/api/content')\n      .then(data => {\n        setCollections(data.data.collections);\n        setProjects(data.data.projects);\n      })\n    }\n  }, []);\n\n  return isLoggedIn ? (\n    <div>\n      <Link to=\"/gear\">Gear</Link>\n      <h1>I AM Home</h1>\n      <section>\n        <header>Recent Collections</header>\n        <ul>\n          <li>+ Collections</li>\n          {collections.map((collection, i) =>\n            <li key={i}>{collection.name}</li>)}\n\n        </ul>\n      </section>\n      <section>\n        <header>Recent Projects</header>\n        <ul>\n          <li>+ Project</li>\n          {projects.map((project, i) =>\n            <li key={i}>\n              <Link to={`/project/${project.id}`}>{project.title}</Link>\n            </li>\n          )}\n        </ul>\n      </section>\n      <Nav />\n    </div>\n  ) : (\n    <Redirect to=\"/\" />\n  );\n}\n","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Library.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/Collection.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/Register.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/Project.js",["101"],"import { useState, useEffect } from \"react\";\nimport { Link, Redirect, useParams } from \"react-router-dom\";\nimport axios from 'axios';\n\nimport Player from \"./Player\";\nimport ProjectNav from \"./ProjectNav\";\nimport Notes from \"./Notes\"\n\nexport default function Project(props) {\n  const [content, setContent] = useState([{ title: \"\", artist: \"\", url: \"\" }])\n  const { isLoggedIn } = props;\n  const { id } = useParams()\n\n  useEffect(() => {\n    axios\n      .get(`http://localhost:8000/api/project/${id}`)\n      .then(data => setContent(data.data.projects))\n      .catch(err => console.log(err))\n  }, [])\n\n  const stems = content.map((project) => {\n    const { title, url, icon, peaks_array } = project\n    return { title, url, icon, peaks_array }\n  })\n\n  console.log(\"I AM CONTENT ZERO DO I HAVE A NOTE\", content[0].notes);\n\n  return isLoggedIn ? (\n    <div>\n      <Link to=\"/home\">Back to Home</Link>\n      <h1>{content[0].title}</h1>\n      <h2>{content[0].artist}</h2>\n      <Player tracks={stems}></Player>\n      {content[0] && <Notes projectId={content[0].id} existingNote={content[0].notes} />}\n      <ProjectNav />\n    </div>\n  ) : (\n      <Redirect to=\"/\" />\n    );\n}","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Nav.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/Player.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/ProjectNav.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/Notes.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/EventEmitter.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/Waveform.js",["102"],"import React, { useEffect, useRef, useState } from \"react\";\n\nimport WaveSurfer from \"wavesurfer.js\";\nimport Emitter from \"../EventEmitter\";\n\nexport default function Waveform({\n  track,\n  context,\n  setSoloCounter,\n  soloCounter,\n}) {\n  const waveformRef = useRef(null);\n  const wavesurfer = useRef(null);\n  const [volume, setVolume] = useState(0.5);\n  const [isMuted, setIsMuted] = useState(false);\n  const [soloed, setSolo] = useState(false);\n\n  const formWaveSurferOptions = (ref) => ({\n    container: ref,\n    waveColor: \"#F5F5DC\",\n    progressColor: \"rgb(245, 103, 93)\",\n    cursorColor: \"rgb(245, 103, 93)\",\n    barWidth: 3,\n    barRadius: 3,\n    responsive: true,\n    height: 150,\n    // If true, normalize by the maximum peak instead of 1.0.\n    normalize: true,\n    // Use the PeakCache to improve rendering speed of large waveforms.\n    partialRender: true,\n    audioContext: context,\n  });\n\n  // create new WaveSurfer instance\n  // On component mount and when url changes\n  useEffect(() => {\n    const options = formWaveSurferOptions(waveformRef.current);\n    wavesurfer.current = WaveSurfer.create(options);\n    wavesurfer.current.solo = false;\n\n    wavesurfer.current.load(track.url);\n\n    wavesurfer.current.on(\"ready\", function () {\n      // make sure object stillavailable when file loaded\n      if (wavesurfer.current) {\n        wavesurfer.current.setVolume(volume);\n        setVolume(volume);\n      }\n\n      Emitter.on(\"clickRewind\", () => wavesurfer.current.seekTo(0));\n      Emitter.on(\"clickPlayPause\", () => wavesurfer.current.playPause());\n    });\n\n    //one for all - when one wavefrom performs a seekTo emit event with currentTime as argument\n    wavesurfer.current.on(\"seek\", function (progress) {\n      //emit seekAll event\n      Emitter.emit(\"seekAll\", wavesurfer.current.getCurrentTime());\n    });\n\n    //update other waveforms with progress from clicked\n    Emitter.on(\"seekAll\", (progress) => {\n      if (progress !== wavesurfer.current.getCurrentTime()) {\n        wavesurfer.current.setCurrentTime(progress);\n      }\n    });\n\n    Emitter.on(\"soloON\", () => {\n      if (!wavesurfer.current.solo && !wavesurfer.current.getMute()) {\n        wavesurfer.current.setMute(true);\n      } else if (!wavesurfer.current.solo && wavesurfer.current.getMute()) {\n        console.log(`${track.name} is not soloed but is muted`);\n      } else if (wavesurfer.current.solo) {\n        wavesurfer.current.setMute(false);\n      }\n    });\n\n    Emitter.on(\"soloOFF\", () => {\n      console.log(`somone turned a solo OFF.`);\n      //currently checks if it's own solo is off but we need to check if EVERY solo is off\n      wavesurfer.current.solo = false;\n      setSolo(false);\n      if (!wavesurfer.current.wasMuted) {\n        wavesurfer.current.setMute(false);\n        setIsMuted(false);\n      } else {\n        wavesurfer.current.setMute(true);\n        setIsMuted(true);\n      }\n    });\n    // Removes events, elements and disconnects Web Audio nodes.\n    // when component unmount\n    return () => {\n      wavesurfer.current.unAll();\n      wavesurfer.current.destroy();\n    };\n  }, [track.url]);\n\n  const handleMute = () => {\n    setIsMuted(!isMuted);\n    wavesurfer.current.toggleMute();\n    wavesurfer.current.wasMuted = wavesurfer.current.getMute();\n  };\n\n  const handleSolo = () => {\n    setSolo(!soloed);\n    //not soloed and isMuted\n    if (!wavesurfer.current.solo && isMuted) {\n      wavesurfer.current.toggleMute();\n      wavesurfer.current.solo = true;\n      //not soloed and not isMuted\n    } else if (!wavesurfer.current.solo && !isMuted) {\n      wavesurfer.current.solo = true;\n    } else if (wavesurfer.current.solo) {\n      wavesurfer.current.solo = false;\n    }\n\n    // Emitter.emit(`${soloed ? 'soloON' : 'soloOFF'}`)\n  };\n\n  useEffect(() => {\n    Emitter.emit(`${soloed ? \"soloON\" : \"soloOFF\"}`);\n  }, [soloed]);\n\n  const onVolumeChange = (e) => {\n    const { target } = e;\n    const newVolume = +target.value;\n\n    if (newVolume) {\n      setVolume(newVolume);\n      wavesurfer.current.setVolume(newVolume || 1);\n    }\n  };\n\n  return (\n    <div>\n      <div id=\"waveform\" ref={waveformRef} />\n      <div className=\"controls\">\n        <h2>{track.name}</h2>\n        <button className={!isMuted ? \"mute\" : \"unmute\"} onClick={handleMute}>\n          {\" \"}\n          M\n        </button>\n        <button className={!soloed ? \"solo\" : \"unsolo\"} onClick={handleSolo}>\n          {\" \"}\n          S\n        </button>\n        <input\n          type=\"range\"\n          id=\"volume\"\n          name=\"volume\"\n          // waveSurfer recognize value of `0` same as `1`\n          //  so we need to set some zero-ish value for silence\n          min=\"0.01\"\n          max=\"1\"\n          step=\".025\"\n          onChange={onVolumeChange}\n          defaultValue={volume}\n        />\n        <label htmlFor=\"volume\">Volume</label>\n      </div>\n      <hr />\n    </div>\n  );\n}\n",["103","104"],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/Results.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/Song.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":2,"column":50,"nodeType":"111","messageId":"112","endLine":2,"endColumn":54},{"ruleId":"109","severity":1,"message":"113","line":2,"column":56,"nodeType":"111","messageId":"112","endLine":2,"endColumn":65},{"ruleId":"109","severity":1,"message":"114","line":4,"column":8,"nodeType":"111","messageId":"112","endLine":4,"endColumn":13},{"ruleId":"109","severity":1,"message":"115","line":17,"column":10,"nodeType":"111","messageId":"112","endLine":17,"endColumn":16},{"ruleId":"109","severity":1,"message":"116","line":17,"column":18,"nodeType":"111","messageId":"112","endLine":17,"endColumn":27},{"ruleId":"109","severity":1,"message":"117","line":3,"column":10,"nodeType":"111","messageId":"112","endLine":3,"endColumn":18},{"ruleId":"109","severity":1,"message":"117","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":25},{"ruleId":"109","severity":1,"message":"118","line":6,"column":10,"nodeType":"111","messageId":"112","endLine":6,"endColumn":21},{"ruleId":"119","severity":1,"message":"120","line":21,"column":6,"nodeType":"121","endLine":21,"endColumn":8,"suggestions":"122"},{"ruleId":"119","severity":1,"message":"123","line":19,"column":6,"nodeType":"121","endLine":19,"endColumn":8,"suggestions":"124"},{"ruleId":"119","severity":1,"message":"125","line":96,"column":6,"nodeType":"121","endLine":96,"endColumn":17,"suggestions":"126"},{"ruleId":"105","replacedBy":"127"},{"ruleId":"107","replacedBy":"128"},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useParams' is defined but never used.","'axios' is defined but never used.","'tracks' is assigned a value but never used.","'setTracks' is assigned a value but never used.","'Fragment' is defined but never used.","'DialogTitle' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isLoggedIn'. Either include it or remove the dependency array.","ArrayExpression",["131"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["132"],"React Hook useEffect has missing dependencies: 'formWaveSurferOptions', 'track.name', and 'volume'. Either include them or remove the dependency array. You can also do a functional update 'setVolume(v => ...)' if you only need 'volume' in the 'setVolume' call.",["133"],["129"],["130"],"no-global-assign","no-unsafe-negation",{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},"Update the dependencies array to be: [isLoggedIn]",{"range":"140","text":"141"},"Update the dependencies array to be: [id]",{"range":"142","text":"143"},"Update the dependencies array to be: [formWaveSurferOptions, track.name, track.url, volume]",{"range":"144","text":"145"},[532,534],"[isLoggedIn]",[595,597],"[id]",[3090,3101],"[formWaveSurferOptions, track.name, track.url, volume]"]