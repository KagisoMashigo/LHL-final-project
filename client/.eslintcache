[{"/vagrant/LHL-final-project/client/src/index.js":"1","/vagrant/LHL-final-project/client/src/App.js":"2","/vagrant/LHL-final-project/client/src/reportWebVitals.js":"3","/vagrant/LHL-final-project/client/src/Waveform.js":"4","/vagrant/LHL-final-project/client/src/components/PlayList.js":"5"},{"size":500,"mtime":1610746453000,"results":"6","hashOfConfig":"7"},{"size":995,"mtime":1610749242000,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1610746453000,"results":"9","hashOfConfig":"7"},{"size":2375,"mtime":1610749058000,"results":"10","hashOfConfig":"7"},{"size":508,"mtime":1610749223000,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"hm3r2u",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/vagrant/LHL-final-project/client/src/index.js",[],["24","25"],"/vagrant/LHL-final-project/client/src/App.js",[],"/vagrant/LHL-final-project/client/src/reportWebVitals.js",[],"/vagrant/LHL-final-project/client/src/Waveform.js",["26"],"import React, { useEffect, useRef, useState } from \"react\";\n\nimport WaveSurfer from \"wavesurfer.js\";\n\nconst formWaveSurferOptions = ref => ({\n  container: ref,\n  waveColor: \"#eee\",\n  progressColor: \"OrangeRed\",\n  cursorColor: \"OrangeRed\",\n  barWidth: 3,\n  barRadius: 3,\n  responsive: true,\n  height: 150,\n  // If true, normalize by the maximum peak instead of 1.0.\n  normalize: true,\n  // Use the PeakCache to improve rendering speed of large waveforms.\n  partialRender: true\n});\n\nexport default function Waveform({ url }) {\n  const waveformRef = useRef(null);\n  const wavesurfer = useRef(null);\n  const [playing, setPlay] = useState(false);\n  const [volume, setVolume] = useState(0.5);\n\n  // create new WaveSurfer instance\n  // On component mount and when url changes\n  useEffect(() => {\n    setPlay(false);\n\n    const options = formWaveSurferOptions(waveformRef.current);\n    wavesurfer.current = WaveSurfer.create(options);\n\n    wavesurfer.current.load(url);\n\n    wavesurfer.current.on(\"ready\", function() {\n      // https://wavesurfer-js.org/docs/methods.html\n      // wavesurfer.current.play();\n      // setPlay(true);\n\n      // make sure object stillavailable when file loaded\n      if (wavesurfer.current) {\n        wavesurfer.current.setVolume(volume);\n        setVolume(volume);\n      }\n    });\n\n    // Removes events, elements and disconnects Web Audio nodes.\n    // when component unmount\n    return () => wavesurfer.current.destroy();\n  }, [url]);\n\n  const handlePlayPause = () => {\n    setPlay(!playing);\n    wavesurfer.current.playPause();\n  };\n\n  const onVolumeChange = e => {\n    const { target } = e;\n    const newVolume = +target.value;\n\n    if (newVolume) {\n      setVolume(newVolume);\n      wavesurfer.current.setVolume(newVolume || 1);\n    }\n  };\n\n  return (\n    <div>\n      <div id=\"waveform\" ref={waveformRef} />\n      <div className=\"controls\">\n        <button onClick={handlePlayPause}>{!playing ? \"Play\" : \"Pause\"}</button>\n        <input\n          type=\"range\"\n          id=\"volume\"\n          name=\"volume\"\n          // waveSurfer recognize value of `0` same as `1`\n          //  so we need to set some zero-ish value for silence\n          min=\"0.01\"\n          max=\"1\"\n          step=\".025\"\n          onChange={onVolumeChange}\n          defaultValue={volume}\n        />\n        <label htmlFor=\"volume\">Volume</label>\n      </div>\n    </div>\n  );\n}\n","/vagrant/LHL-final-project/client/src/components/PlayList.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":51,"column":6,"nodeType":"33","endLine":51,"endColumn":11,"suggestions":"34"},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'volume'. Either include it or remove the dependency array. You can also do a functional update 'setVolume(v => ...)' if you only need 'volume' in the 'setVolume' call.","ArrayExpression",["37"],"no-global-assign","no-unsafe-negation",{"desc":"38","fix":"39"},"Update the dependencies array to be: [url, volume]",{"range":"40","text":"41"},[1452,1457],"[url, volume]"]