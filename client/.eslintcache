[{"/Users/romesh/lighthouse/LHL-final-project/client/src/index.js":"1","/Users/romesh/lighthouse/LHL-final-project/client/src/reportWebVitals.js":"2","/Users/romesh/lighthouse/LHL-final-project/client/src/App.js":"3","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Entry.js":"4","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Login.js":"5","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Gear.js":"6","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Search.js":"7","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Home.js":"8","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Library.js":"9","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Collection.js":"10","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Register.js":"11","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Project.js":"12","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Nav.js":"13","/Users/romesh/lighthouse/LHL-final-project/client/src/components/ProjectNav.js":"14","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Notes.js":"15","/Users/romesh/lighthouse/LHL-final-project/client/src/EventEmitter.js":"16","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Waveform.js":"17","/Users/romesh/lighthouse/LHL-final-project/client/src/components/NewCollection.js":"18","/Users/romesh/lighthouse/LHL-final-project/client/src/components/ProjectCard.js":"19","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Player.js":"20","/Users/romesh/lighthouse/LHL-final-project/client/src/components/NewProject.js":"21","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Song.js":"22","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Results.js":"23","/Users/romesh/lighthouse/LHL-final-project/client/src/components/SongPreview.js":"24","/Users/romesh/lighthouse/LHL-final-project/client/src/components/AddProjectToCollection.js":"25","/Users/romesh/lighthouse/LHL-final-project/client/src/components/PlayerTransport.js":"26","/Users/romesh/lighthouse/LHL-final-project/client/src/hooks/useDebounce.js":"27"},{"size":500,"mtime":1610731422925,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":1610731422926,"results":"30","hashOfConfig":"29"},{"size":2704,"mtime":1611262731886,"results":"31","hashOfConfig":"29"},{"size":1617,"mtime":1611323124422,"results":"32","hashOfConfig":"29"},{"size":4545,"mtime":1611323124423,"results":"33","hashOfConfig":"29"},{"size":1915,"mtime":1611333915848,"results":"34","hashOfConfig":"29"},{"size":3867,"mtime":1611333915848,"results":"35","hashOfConfig":"29"},{"size":3124,"mtime":1611273588920,"results":"36","hashOfConfig":"29"},{"size":4098,"mtime":1611273588920,"results":"37","hashOfConfig":"29"},{"size":2655,"mtime":1611262731886,"results":"38","hashOfConfig":"29"},{"size":5687,"mtime":1611323124423,"results":"39","hashOfConfig":"29"},{"size":5288,"mtime":1611345596356,"results":"40","hashOfConfig":"29"},{"size":1040,"mtime":1611335863320,"results":"41","hashOfConfig":"29"},{"size":1393,"mtime":1611345682944,"results":"42","hashOfConfig":"29"},{"size":1238,"mtime":1611262731887,"results":"43","hashOfConfig":"29"},{"size":597,"mtime":1610891500528,"results":"44","hashOfConfig":"29"},{"size":5900,"mtime":1611333915849,"results":"45","hashOfConfig":"29"},{"size":1430,"mtime":1611181505878,"results":"46","hashOfConfig":"29"},{"size":1758,"mtime":1611323124423,"results":"47","hashOfConfig":"29"},{"size":1088,"mtime":1611262731887,"results":"48","hashOfConfig":"29"},{"size":1320,"mtime":1611333915848,"results":"49","hashOfConfig":"29"},{"size":1847,"mtime":1611269438564,"results":"50","hashOfConfig":"29"},{"size":425,"mtime":1611186354633,"results":"51","hashOfConfig":"29"},{"size":3169,"mtime":1611333915849,"results":"52","hashOfConfig":"29"},{"size":1145,"mtime":1611262731886,"results":"53","hashOfConfig":"29"},{"size":1212,"mtime":1611262731888,"results":"54","hashOfConfig":"29"},{"size":1269,"mtime":1611269438565,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1wqprfu",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"58"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"58"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"58"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"58"},"/Users/romesh/lighthouse/LHL-final-project/client/src/index.js",[],["127","128"],"/Users/romesh/lighthouse/LHL-final-project/client/src/reportWebVitals.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/App.js",["129","130","131","132","133","134","135","136"],"import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link, useParams } from \"react-router-dom\";\n// import UserInfo from '../UserInfo';\nimport axios from \"axios\";\nimport \"./App.css\";\n\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport green from '@material-ui/core/colors/green';\n\nimport Project from \"./components/Project\";\nimport Entry from \"./components/Entry\";\nimport Login from \"./components/Login\";\nimport Gear from \"./components/Gear\";\nimport Search from \"./components/Search\";\nimport Register from \"./components/Register\";\nimport Library from \"./components/Library\";\nimport Home from \"./components/Home\";\nimport Collection from \"./components/Collection\";\nimport SongPreview from \"./components/SongPreview\"\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"rgb(245, 103, 93)\",\n    },\n    secondary: {\n      main: \"rgb(244, 240, 234)\",\n    },\n    layersWhite: {\n      main: \"rgb(244, 240, 234)\",\n    }\n  },\n});\n\n\nexport default function App() {\n  const [tracks, setTracks] = useState([]);\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const localUser = localStorage.getItem(\"user\")\n    setUser(localUser)\n  }, [])\n  // instead of local, have use effect thatt uses on mount to send axios req to backend\n  useEffect(() => {\n    localStorage.setItem(\"user\", user)\n  }, [user])\n\n  console.log(\"LOCAL USER IN APP-----\", user);\n\n  return (\n\n    <Router>\n      <ThemeProvider theme={theme}>\n        <div className=\"App\">\n          <Switch>\n            <Route path=\"/gear\">\n              <Gear isLoggedIn={user} setUser={setUser} />\n            </Route>\n            <Route path=\"/home\">\n              <Home isLoggedIn={user} />\n            </Route>\n            <Route path=\"/library\">\n              <Library isLoggedIn={user} />\n            </Route>\n            <Route path=\"/collection/:id\">\n              <Collection isLoggedIn={user} />\n            </Route>\n            <Route path=\"/search\">\n              <Search isLoggedIn={user} />\n            </Route>\n            <Route path=\"/project/:id\">\n              <Project isLoggedIn={user} />\n            </Route>\n            <Route path=\"/login\">\n              <Login isLoggedIn={user} setUser={setUser} />\n            </Route>\n            <Route path=\"/register\">\n              <Register isLoggedIn={user} setUser={setUser} />\n            </Route>\n            <Route path=\"/\">\n              <Entry />\n            </Route>\n          </Switch>\n        </div>\n      </ThemeProvider>\n    </Router>\n  );\n}\n\n// routing system that usee state","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Entry.js",["137"],"import { Link, Redirect } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button } from \"@material-ui/core\";\n\nexport default function Entry(props) {\n  const useStyles = makeStyles((theme) => ({\n    entryImage: {\n      backgroundImage: `url(${\"https://unsplash.com/photos/MEL-jJnm7RQ\"})`,\n    },\n\n    formDiv: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      width: \"100%\",\n      height: \"50%\",\n    },\n\n    heading: {\n      color: \"antiquewhite\",\n      fontFamily: \"Noto Sans\",\n      margin: \"50px\",\n    },\n\n    heading2: {\n      color: \"antiquewhite\",\n      fontFamily: \"Noto Sans\",\n      fontSize: 15,\n      margin: \"40px\",\n    },\n\n    logButton: {\n      fontFamily: \"Noto Sans\",\n      display: \"flex\",\n      background: \"rgb(245, 103, 93)\",\n      width: \"60%\",\n      margin: \"25px\",\n      color: \"antiquewhite\",\n    },\n\n    back: {\n      flexGrow: 1,\n      display: \"flex\",\n    },\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.entryImage}>\n\n      <h1 className={classes.heading}>Layers</h1>\n\n      <h2 className={classes.heading2}>\n        With Layers you can isolate the parts of a track to teach or learn.\n        Drums, guitar, vocals, or a combination of a few? It's really up to you.\n      </h2>\n\n      <div className={classes.formDiv}>\n        <Button to=\"/register\" component={Link} className={classes.logButton}>\n          Sign up\n        </Button>\n\n        <Button to=\"/login\" component={Link} className={classes.logButton}>\n          Login\n        </Button>\n      </div>\n    </div>\n  );\n}\n\n","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Login.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/Gear.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/Search.js",["138","139","140","141","142","143","144","145"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Nav from \"./Nav\";\nimport Results from \"./Results\";\nimport NewProject from \"./NewProject\";\nimport NewCollection from \"./NewCollection\";\nimport SongPreview from \"./SongPreview\";\nimport { Redirect } from \"react-router-dom\";\nimport { DialogTitle, TextField, Grid, Container } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport useDebounce from \"../hooks/useDebounce\";\nimport { TextFormatTwoTone } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n\n  searchBox: {\n    color: \"white\",\n    backgroundColor: \"#1a1a1a\",\n    border: \"none\",\n    borderBottom: \"var(--tertiary-color) 4px solid\",\n    width: \"80%\"\n  }\n}));\n\nexport default function Search(props) {\n  const { isLoggedIn } = props;\n  const [term, setTerm] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [isSongSelected, setIsSongSelected] = useState({});\n  const [isSearching, setIsSearching] = useState(false);\n\n  const debouncedSearchTerm = useDebounce(term, 200);\n\n  useEffect(\n    () => {\n      // Make sure we have a value (user has entered something in input)\n      if (debouncedSearchTerm) {\n        setIsSearching(true);\n        setTerm(term)\n      }\n    }, [debouncedSearchTerm]);\n\n\n  //SEARCH QUERY\n  useEffect(() => {\n    axios({\n      //gets fill data from itunes\n      method: 'get',\n      url: `https://itunes.apple.com/search?term=${term.toLowerCase()}&country=CA&media=music&entity=song`\n    })\n      //gets our actual db data\n      .catch(err => console.log(err))\n      .then(data1 => {\n        axios.get(`api/content/search/${term.toLowerCase()}`)\n          .then(data2 => {\n            // console.log(`data1 is: `, data1.data.results)\n            // console.log(`you hit the search content route. data2 is: `, data2.data)\n            const response = []\n            if (data2.data.length > 0) {\n              const data2formatted = data2.data.map(entry => {\n                return {\n                  trackId: entry.id,\n                  artistName: entry.artist,\n                  artworkUrl100: entry.url_album_artwork,\n                  trackName: entry.title,\n                  collectionName: entry.album,\n                  previewUrl: entry.url_full_song_preview\n                }\n              })\n              response.push(...data2formatted)\n            }\n            response.push(...data1.data.results)\n            setResults(response);\n            //once we have results\n            setIsSearching(false);\n          })\n          .catch(err => console.log(err))\n      })\n  }, [debouncedSearchTerm])\n\n  const handleChange = (event) => {\n    setTerm(event.target.value)\n  }\n\n  // console.log(\"RESULTS------------\", results)\n\n  // const { trackName, url_full_song_preview, artistName, artworkUrl100 } = results[0];\n  // console.log(\"RESULTSSSSS: \", results)\n\n  // const songId = 1;\n  const classes = useStyles();\n  return !isSongSelected.trackName ? (\n    <div>\n      <h1>Search</h1>\n      <TextField variant=\"filled\" value={term} onChange={handleChange} className={classes.searchBox} />\n      {/* <p>{results}</p> */}\n      {/* <NewProject songId={songId} user={isLoggedIn} /> */}\n      {/* <NewCollection songId={songId} user={isLoggedIn} /> */}\n      <Container className={classes.cardGrid} maxWidth=\"md\" id=\"projects\">\n        <Grid container spacing={4}>\n          <Results results={results} setSong={setIsSongSelected}></Results>\n        </Grid>\n      </Container>\n      {/* const { thumbnail, title, previewTrack, artist } = props; */}\n\n      <Nav />\n    </div >\n  ) : (\n      <div>\n        <SongPreview results={isSongSelected} setSong={setIsSongSelected} user={isLoggedIn} />\n        <Nav />\n      </div>\n\n    )\n}","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Home.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/Library.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/Collection.js",["146","147"],"import { useState, useEffect } from \"react\";\nimport { Link, Redirect, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport ProjectCard from './ProjectCard'\nimport Nav from './Nav'\n\nexport default function Collection(props) {\n  const { isLoggedIn, } = props;\n  const { id } = useParams();\n  const [projects, setProjects] = useState([])\n\n  useEffect(() => {\n    axios\n      .get(`/api/collection/${id}`)\n      .then(data => {\n        const data2 = data.data.projects\n        const response = []\n        if (data2.length > 0) {\n          const data2formatted = data2.map(entry => {\n            return {\n              trackId: entry.id,\n              artistName: entry.artist,\n              artworkUrl100: entry.url_album_artwork,\n              trackName: entry.title,\n              collectionName: entry.album,\n              previewUrl: entry.url_full_song_preview\n            }\n          })\n          response.push(...data2formatted)\n        }\n        console.log(response)\n        setProjects(response)\n      })\n  }, []);\n\n  return isLoggedIn ? (\n    <div>\n      <h1>Your Collections</h1>\n      {projects.map(project => {\n        return <ProjectCard\n          // setSong={setSong}\n          key={project.trackId}\n          {...project}\n          projectData={project}\n          width={1 / 4} />\n      })}\n      <Nav />\n    </div>\n\n  ) : (\n      <Redirect to=\"/\" />\n    );\n}\n","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Register.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/Project.js",["148","149","150"],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/Nav.js",["151"],"import { Link } from \"react-router-dom\";\nimport React, { useState } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Tab, BottomNavigation, } from '@material-ui/core';\nimport HomeIcon from '@material-ui/icons/Home';\nimport LibraryMusicIcon from '@material-ui/icons/LibraryMusic';\nimport SearchIcon from '@material-ui/icons/Search';\n\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n    width: '100%',\n    position: 'fixed',\n    bottom: 0,\n    background: \"var(--tertiary-color)\"\n  }\n});\n\nexport default function SimpleBottomNavigation() {\n  const classes = useStyles();\n\n  return (\n    <BottomNavigation\n      showLabels\n      className={classes.root}\n    >\n      <Tab label=\"Home\" to=\"/home\" icon={<HomeIcon />} component={Link} />\n      <Tab label=\"Search\" to=\"/search\" icon={<SearchIcon />} component={Link} />\n      <Tab label=\"Library\" to=\"/library\" icon={<LibraryMusicIcon />} component={Link} />\n    </BottomNavigation>\n  );\n}\n","/Users/romesh/lighthouse/LHL-final-project/client/src/components/ProjectNav.js",["152","153"],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/Notes.js",["154","155","156","157"],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Divider } from \"@material-ui/core\";\n\nexport default function Notes(props) {\n  // const projectId = props.projectId;\n  // const existingNote = props.existingNote;\n\n  const { projectId, existingNote, note, setNote } = props;\n\n\n  const handleNote = (event) => {\n    setNote(event.target.value);\n  };\n\n  useEffect(() => {\n    setNote(existingNote);\n  }, [existingNote]);\n\n\n\n  return (\n    <div>\n      <h1>Project Notes:</h1>\n      <textarea\n        onChange={handleNote}\n        value={note}\n        type=\"text\"\n        name=\"notes_area\"\n      ></textarea>\n    </div>\n\n  )\n}","/Users/romesh/lighthouse/LHL-final-project/client/src/EventEmitter.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/components/Waveform.js",["158","159"],"import React, { useEffect, useRef, useState } from \"react\";\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { Box, Typography, Input } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport '../RangeInput.css';\n\nimport WaveSurfer from \"wavesurfer.js\";\nimport Emitter from \"../EventEmitter\";\n\n\nconst useStyles = makeStyles({\n  box: {\n    display: \"flex\",\n    alignItems: \"center\",\n    color: \"rgb(244, 240, 234)\",\n    // width: \"80%\",\n    // justifyContent: \"flex\"\n  },\n  stemTitle: {\n    color: \"rgb(244, 240, 234)\",\n    flexBasis: \"50%\",\n    // fontSize: \"1.5em\"\n  },\n  input: {\n    color: \"primary\"\n  }\n});\n\n\nexport default function Waveform({\n  track,\n  context,\n  // setSoloCounter,\n  // soloCounter,\n}) {\n  const classes = useStyles()\n  const waveformRef = useRef(null);\n  const wavesurfer = useRef(null);\n  const [volume, setVolume] = useState(0.5);\n  const [isMuted, setIsMuted] = useState(false);\n  const [soloed, setSolo] = useState(false);\n\n  const formWaveSurferOptions = (ref) => ({\n    container: ref,\n    waveColor: \"#F5F5DC\",\n    progressColor: \"rgb(245, 103, 93)\",\n    cursorColor: \"rgb(245, 103, 93)\",\n    barMinHeight: 1,\n    barWidth: 3,\n    barRadius: 3,\n    responsive: true,\n    height: 80,\n    // width: \"50%\",\n    // If true, normalize by the maximum peak instead of 1.0.\n    normalize: true,\n    // Use the PeakCache to improve rendering speed of large waveforms.\n    partialRender: true,\n\n    audioContext: context,\n  });\n\n  // create new WaveSurfer instance\n  // On component mount and when url changes\n  useEffect(() => {\n    const options = formWaveSurferOptions(waveformRef.current);\n    wavesurfer.current = WaveSurfer.create(options);\n    wavesurfer.current.solo = false;\n\n    wavesurfer.current.load(track.url);\n\n    wavesurfer.current.on(\"ready\", function () {\n      // make sure object stillavailable when file loaded\n      if (wavesurfer.current) {\n        wavesurfer.current.setVolume(volume);\n        setVolume(volume);\n      }\n\n      Emitter.on(\"clickRewind\", () => wavesurfer.current.seekTo(0));\n      Emitter.on(\"clickPlayPause\", () => wavesurfer.current.playPause());\n    });\n\n    //one for all - when one wavefrom performs a seekTo emit event with currentTime as argument\n    wavesurfer.current.on(\"seek\", function (progress) {\n      //emit seekAll event\n      Emitter.emit(\"seekAll\", wavesurfer.current.getCurrentTime());\n    });\n\n    //update other waveforms with progress from clicked\n    Emitter.on(\"seekAll\", (progress) => {\n      if (progress !== wavesurfer.current.getCurrentTime()) {\n        wavesurfer.current.setCurrentTime(progress);\n      }\n    });\n\n    Emitter.on(\"soloON\", () => {\n      if (!wavesurfer.current.solo && !wavesurfer.current.getMute()) {\n        wavesurfer.current.setMute(true);\n      } else if (!wavesurfer.current.solo && wavesurfer.current.getMute()) {\n        // console.log(`${track.trackName} is not soloed but is muted`);\n      } else if (wavesurfer.current.solo) {\n        wavesurfer.current.setMute(false);\n      }\n    });\n\n    Emitter.on(\"soloOFF\", () => {\n      // console.log(`somone turned a solo OFF.`);\n      //currently checks if it's own solo is off but we need to check if EVERY solo is off\n      wavesurfer.current.solo = false;\n      setSolo(false);\n      if (!wavesurfer.current.wasMuted) {\n        wavesurfer.current.setMute(false);\n        setIsMuted(false);\n      } else {\n        wavesurfer.current.setMute(true);\n        setIsMuted(true);\n      }\n    });\n    // Removes events, elements and disconnects Web Audio nodes.\n    // when component unmount\n    return () => {\n      wavesurfer.current.unAll();\n      wavesurfer.current.destroy();\n    };\n  }, [track.url]);\n\n  const handleMute = () => {\n    setIsMuted(!isMuted);\n    wavesurfer.current.toggleMute();\n    wavesurfer.current.wasMuted = wavesurfer.current.getMute();\n  };\n\n  const handleSolo = () => {\n    setSolo(!soloed);\n    //not soloed and isMuted\n    if (!wavesurfer.current.solo && isMuted) {\n      wavesurfer.current.toggleMute();\n      wavesurfer.current.solo = true;\n      //not soloed and not isMuted\n    } else if (!wavesurfer.current.solo && !isMuted) {\n      wavesurfer.current.solo = true;\n    } else if (wavesurfer.current.solo) {\n      wavesurfer.current.solo = false;\n    }\n\n    // Emitter.emit(`${soloed ? 'soloON' : 'soloOFF'}`)\n  };\n\n  useEffect(() => {\n    Emitter.emit(`${soloed ? \"soloON\" : \"soloOFF\"}`);\n  }, [soloed]);\n\n  const onVolumeChange = (e) => {\n    const { target } = e;\n    const newVolume = +target.value;\n\n    if (newVolume) {\n      setVolume(newVolume);\n      wavesurfer.current.setVolume(newVolume || 1);\n    }\n  };\n\n  return (\n    <div>\n      <div id=\"waveform\" ref={waveformRef} />\n      <Box className={classes.box}>\n        <Typography className={classes.stemTitle} component=\"h3\">\n          {track.name}\n        </Typography>\n\n        <ButtonGroup variant=\"text\" color=\"primary\" aria-label=\"text primary button group\">\n          <Button className={!isMuted ? \"mute\" : \"unmute\"} onClick={handleMute}>M</Button>\n          <Button className={!soloed ? \"solo\" : \"unsolo\"} onClick={handleSolo}>S</Button>\n        </ButtonGroup>\n        {/* <button className={!isMuted ? \"mute\" : \"unmute\"} onClick={handleMute}>\n          {\" \"}\n          M\n        </button>\n        <button className={!soloed ? \"solo\" : \"unsolo\"} onClick={handleSolo}>\n          {\" \"}\n          S\n        </button> */}\n        <input\n          type=\"range\"\n          id=\"volume\"\n          name=\"volume\"\n          // waveSurfer recognize value of `0` same as `1`\n          //  so we need to set some zero-ish value for silence\n          min=\"0.01\"\n          max=\"1\"\n          step=\".025\"\n          onChange={onVolumeChange}\n          value={volume}\n        />\n        <label htmlFor=\"volume\"></label>\n      </Box>\n      <hr />\n    </div>\n  );\n}\n","/Users/romesh/lighthouse/LHL-final-project/client/src/components/NewCollection.js",["160","161","162"],"import { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport default function NewCollectionForm(props) {\n  const { user, setCollections, closeForm } = props;\n  // const { setUser, isLoggedIn } = props;\n  const [collectionName, setCollectionName] = useState(\"\");\n  const [collectionId, setCollectionId] = useState(\"\");\n\n  const saveCollection = () => {\n    axios\n      .put(\"http://localhost:8000/api/collection/new\", {\n        name: collectionName,\n        user_id: user\n      })\n      .then((res) => {\n        console.log(\"DATA----------\", res.data);\n\n        console.log(\"COLECTION----------\", res.data.collectionId);\n        setCollections(prev => {\n          return [...prev, res.data.data]\n        })\n        closeForm(false)\n      })\n      .catch((err) => console.log(err));\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    saveCollection();\n  };\n\n  const handleCollection = (event) => {\n    setCollectionName(event.target.value);\n  };\n\n  return (\n    <div>\n      <Link to=\"/home\">Home</Link>\n      <h1>I AM NEW Collection</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          value={collectionName}\n          onChange={handleCollection}\n          type=\"text\"\n          name=\"project_name\"\n          placeholder=\"Enter Collection Name\"\n        ></input>\n        <button type=\"submit\">Save</button>\n      </form>\n    </div>\n  )\n}","/Users/romesh/lighthouse/LHL-final-project/client/src/components/ProjectCard.js",["163"],"import React from \"react\";\nimport { Card, CardContent, CardMedia, Grid, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from \"react-router-dom\";\nimport { TextRotationNoneTwoTone } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    transition: \"all .25s linear\",\n    background: \"rgb(244, 240, 234)\",\n    boxShadow: \"0px 2px 2px 0px rgb(244, 240, 234)\",\n    '&:hover': {\n      boxShadow: \"-1px 10px 29px 0px rgb(244, 240, 234)\"\n    },\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n    flexGrow: 1,\n    backgroundColor: \"var(--white)\",\n  },\n  cardContent: {\n    flexGrow: 1,\n    color: \"black\",\n    fontSize: \".6rem\"\n  },\n  cardText: {\n    fontSize: \".75rem\"\n  }\n}));\n\nexport default function Album(props) {\n  const handleClick = () => {\n\n  }\n\n  const classes = useStyles();\n  return (\n    <Grid item key={props.key} xs={6} sm={6} md={4} >\n      <Card className={classes.card} onClick={handleClick}>\n        <Link to={props.link} >\n          <CardMedia\n            className={classes.cardMedia}\n            image={props.thumbnail}\n            title={props.title}\n            style={useStyles.media}\n          />\n          <CardContent className={classes.cardContent}>\n            <Typography gutterBottom variant=\"h7\" component=\"h2\">\n              {props.title}\n            </Typography>\n            <Typography className={classes.cardText}>\n              {props.songTitle}\n            </Typography>\n            <Typography className={classes.cardText}>\n              {props.songArtist}\n            </Typography>\n          </CardContent>\n        </Link>\n      </Card>\n    </Grid>\n  )\n}\n","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Player.js",["164","165"],"import React, { useState } from \"react\";\nimport Waveform from \"./Waveform\";\nimport Emitter from \"../EventEmitter\"\n\nconst AudioCtx = window.AudioContext || window.webkitAudioContext;\nconst audioCtx = new AudioCtx();\n\nconst Player = ({ tracks }) => {\n  const [playing, setPlay] = useState(false);\n  const handlePlayPause = () => {\n    setPlay(!playing);\n    Emitter.emit('clickPlayPause', \"\");\n  };\n  const handleRewind = () => {\n    Emitter.emit('clickRewind', setPlay(playing));\n  };\n\n\n  // console.log(\"TRACKS-------\", tracks)\n\n  return (\n    <div className=\"player\">\n      {tracks.map((track, i) => {\n        return track.url && <Waveform key={i} track={track} context={audioCtx} />\n      })};\n      <div id=\"transport\">\n\n        <button onClick={handleRewind}>Rewind</button>\n        <button onClick={handlePlayPause}>{!playing ? \"Play\" : \"Pause\"}</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Player;\n","/Users/romesh/lighthouse/LHL-final-project/client/src/components/NewProject.js",["166"],"import { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport default function NewProjectForm(props) {\n  const { songId, user } = props;\n  // const { setUser, isLoggedIn } = props;\n  const [projectTitle, setProjectTitle] = useState(\"\");\n  const [projectId, setProjectId] = useState(\"\");\n\n  const saveProject = () => {\n    axios\n      .put(\"http://localhost:8000/api/project/new\", {\n        title: projectTitle,\n        song_id: songId,\n        user_id: user,\n        notes: \"\"\n      })\n      .then((res) => {\n        console.log(\"PROJECT----------\", res.data.projectId);\n        setProjectId(res.data.projectId);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    saveProject();\n  };\n\n  const handleProject = (event) => {\n    setProjectTitle(event.target.value);\n  };\n\n  return (\n    <div>\n      <p>Add New Project?</p>\n      <form onSubmit={handleSubmit}>\n        <input\n          value={projectTitle}\n          onChange={handleProject}\n          type=\"text\"\n          name=\"project_name\"\n          placeholder=\"Enter Project Name\"\n        ></input>\n        <button type=\"submit\">Save</button>\n      </form>\n      {projectId && <Redirect to={`/project/${projectId}`} />}\n    </div>\n  )\n}\n","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Song.js",["167","168","169"],"import React from \"react\";\nimport { Card, CardActions, CardContent, CardMedia, Grid, Typography, Link } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport classnames from \"classnames\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    transition: \"all .25s linear\",\n    boxShadow: \"0px 2px 2px 0px rgb(245, 103, 93)\",\n    '&:hover': {\n      boxShadow: \"-1px 10px 29px 0px rgb(245, 103, 93)\"\n   },\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n    flexGrow: 1\n  },\n  cardContent: {\n    flexGrow: 1\n  },\n}));\n\nexport default function Album(props) {\n  // const albumInfoClass = classnames(\"album__info\", {\n  //   \"album__info--explicit\": props.collectionExplicitness === \"explicit\"\n  // });\n  const { setSong, songData } = props;\n\n  const handleClick = () => {\n    setSong(songData)\n  }\n\n  const classes = useStyles();\n  return (\n    <Grid item key={props.key} xs={6} sm={6} md={4}>\n      <Card className={classes.card} onClick={handleClick}>\n        <CardMedia\n          className={classes.cardMedia}\n          image={props.artworkUrl100}\n          title={props.trackName}\n          style={useStyles.media}\n        />\n        <CardContent className={classes.cardContent}>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {props.trackName}\n          </Typography>\n          <Typography>\n            {props.artistName}\n          </Typography>\n          <Typography>\n            {props.collectionName}\n          </Typography>\n        </CardContent>\n      </Card>\n    </Grid>\n  )\n}\n","/Users/romesh/lighthouse/LHL-final-project/client/src/components/Results.js",["170"],"import { Fragment } from \"react\";\nimport SongPreview from \"./SongPreview\"\n\nimport Song from \"./Song\";\n\nexport default function Results(props) {\n  const { results, setSong } = props;\n\n\n\n  return results.map(song => {\n    return (\n      <Fragment>\n        <Song\n          setSong={setSong}\n          key={song.trackId}\n          {...song}\n          songData={song}\n          width={1 / 4} />\n\n      </ Fragment>\n    );\n  });\n}\n","/Users/romesh/lighthouse/LHL-final-project/client/src/components/SongPreview.js",["171","172","173","174","175","176","177","178","179"],"import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport { CardContent, CardMedia, IconButton, Typography, Grid, Button, Box } from '@material-ui/core';\nimport { SkipPrevious, PlayArrow, SkipNext } from '@material-ui/icons';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport { Link, Redirect } from \"react-router-dom\";\nimport NewProject from \"./NewProject\"\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex'\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  content: {\n    flex: '1 0 auto',\n  },\n  cover: {\n    width: 151,\n  },\n  controls: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingLeft: theme.spacing(1),\n\n    paddingBottom: theme.spacing(1),\n  },\n  playIcon: {\n    height: 38,\n    width: 38,\n  },\n}));\n\nexport default function SongPreview(props) {\n  const { trackName, previewUrl, artistName, artworkUrl100, trackId } = props.results;\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const handlePreview = () => {\n    //do some stuff\n    console.log(previewUrl);\n  }\n\n  const handleClick = () => {\n    props.setSong({})\n  }\n  console.log(`artwork url is`, artworkUrl100)\n\n  return (\n    <div>\n      <header className={classes.header}>\n\n        <ArrowBackIosIcon\n          className={classes.backArrow}\n          onClick={handleClick}\n        >Back to Home\n            </ArrowBackIosIcon>\n\n\n        <Box className={classes.titleBox}>\n\n          <Typography component=\"h1\" variant=\"h5\">\n            Search\n          </Typography>\n\n        </Box>\n      </header>\n\n      <Grid item key={props.id} xs={12}>\n        <Card className={classes.root}>\n          <div className={classes.details}>\n            <CardContent className={classes.content}>\n              <CardMedia\n                className={classes.cover}\n                image={artworkUrl100}\n                title={trackName}\n                style={useStyles.media}\n              />\n              <Typography component=\"h5\" variant=\"h5\">\n                {trackName}\n              </Typography>\n              <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                {artistName}\n              </Typography>\n            </CardContent>\n            {/* <div className={classes.controls}>\n            <IconButton aria-label=\"previous\">\n              {theme.direction === 'rtl' ? <SkipNext /> : <SkipPrevious />}\n            </IconButton>\n            <IconButton aria-label=\"play/pause\">\n              <PlayArrow className={classes.playIcon} onClick={handlePreview} />\n            </IconButton>\n            <IconButton aria-label=\"next\">\n              {theme.direction === 'rtl' ? <SkipPrevious /> : <SkipNext />}\n            </IconButton>\n          </div> */}\n            <CardMedia\n              component=\"audio\"\n              image={previewUrl}\n              title='title'\n              controls\n            />\n          </div>\n          <button class=\"btn-btn danger\" onClick={handleClick}>Cancel</button>\n\n        </Card >\n        <NewProject songId={trackId} user={props.user} />\n\n      </Grid >\n    </div>\n  );\n}","/Users/romesh/lighthouse/LHL-final-project/client/src/components/AddProjectToCollection.js",["180","181","182","183","184"],"import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport NativeSelect from '@material-ui/core/NativeSelect';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    color: \"#ffffff\",\n    background: \"white\"\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport default function AddProjectToCollection(props) {\n  const { collections, setCollectionId, collectionId } = props\n  const classes = useStyles();\n\n  const handleChange = (event) => {\n    setCollectionId(event.target.value)\n  };\n\n  return (\n\n    <FormControl className={classes.formControl}>\n      <InputLabel htmlFor=\"age-native-helper\">Collections</InputLabel>\n      <NativeSelect\n        // value={state.age}\n        onChange={handleChange}\n        inputProps={{\n          name: 'Add to Collection'\n        }}\n      >\n        <option aria-label=\"None\" value=\"\" />\n        {collections.map(collection => {\n          return <option value={collection.id}>{collection.name}</option>\n        })}\n\n      </NativeSelect>\n      <FormHelperText>Choose a Collection</FormHelperText>\n    </FormControl>\n  )\n\n}","/Users/romesh/lighthouse/LHL-final-project/client/src/components/PlayerTransport.js",[],"/Users/romesh/lighthouse/LHL-final-project/client/src/hooks/useDebounce.js",["185","186"],"import React, { useState, useEffect } from 'react';\n\n// Our hook\nexport default function useDebounce(value, delay) {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(\n    () => {\n      // Set debouncedValue to value (passed in) after the specified delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n\n      // Return a cleanup function that will be called every time ...\n      // ... useEffect is re-called. useEffect will only be re-called ...\n      // ... if value changes (see the inputs array below).\n      // This is how we prevent debouncedValue from changing if value is ...\n      // ... changed within the delay period. Timeout gets cleared and restarted.\n      // To put it in context, if the user is typing within our app's ...\n      // ... search box, we don't want the debouncedValue to update until ...\n      // ... they've stopped typing for more than 500ms.\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    // Only re-call effect if value changes\n    // You could also add the \"delay\" var to inputs array if you ...\n    // ... need to be able to change that dynamically.\n    [value]\n  );\n\n  return debouncedValue;\n}",{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","severity":1,"message":"192","line":2,"column":50,"nodeType":"193","messageId":"194","endLine":2,"endColumn":54},{"ruleId":"191","severity":1,"message":"195","line":2,"column":56,"nodeType":"193","messageId":"194","endLine":2,"endColumn":65},{"ruleId":"191","severity":1,"message":"196","line":4,"column":8,"nodeType":"193","messageId":"194","endLine":4,"endColumn":13},{"ruleId":"191","severity":1,"message":"197","line":9,"column":8,"nodeType":"193","messageId":"194","endLine":9,"endColumn":14},{"ruleId":"191","severity":1,"message":"198","line":10,"column":8,"nodeType":"193","messageId":"194","endLine":10,"endColumn":13},{"ruleId":"191","severity":1,"message":"199","line":21,"column":8,"nodeType":"193","messageId":"194","endLine":21,"endColumn":19},{"ruleId":"191","severity":1,"message":"200","line":39,"column":10,"nodeType":"193","messageId":"194","endLine":39,"endColumn":16},{"ruleId":"191","severity":1,"message":"201","line":39,"column":18,"nodeType":"193","messageId":"194","endLine":39,"endColumn":27},{"ruleId":"191","severity":1,"message":"202","line":1,"column":16,"nodeType":"193","messageId":"194","endLine":1,"endColumn":24},{"ruleId":"191","severity":1,"message":"203","line":1,"column":17,"nodeType":"193","messageId":"194","endLine":1,"endColumn":25},{"ruleId":"191","severity":1,"message":"204","line":5,"column":8,"nodeType":"193","messageId":"194","endLine":5,"endColumn":18},{"ruleId":"191","severity":1,"message":"205","line":6,"column":8,"nodeType":"193","messageId":"194","endLine":6,"endColumn":21},{"ruleId":"191","severity":1,"message":"202","line":8,"column":10,"nodeType":"193","messageId":"194","endLine":8,"endColumn":18},{"ruleId":"191","severity":1,"message":"206","line":9,"column":10,"nodeType":"193","messageId":"194","endLine":9,"endColumn":21},{"ruleId":"191","severity":1,"message":"207","line":12,"column":10,"nodeType":"193","messageId":"194","endLine":12,"endColumn":27},{"ruleId":"191","severity":1,"message":"208","line":34,"column":10,"nodeType":"193","messageId":"194","endLine":34,"endColumn":21},{"ruleId":"209","severity":1,"message":"210","line":83,"column":6,"nodeType":"211","endLine":83,"endColumn":27,"suggestions":"212"},{"ruleId":"191","severity":1,"message":"192","line":2,"column":10,"nodeType":"193","messageId":"194","endLine":2,"endColumn":14},{"ruleId":"209","severity":1,"message":"213","line":34,"column":6,"nodeType":"211","endLine":34,"endColumn":8,"suggestions":"214"},{"ruleId":"209","severity":1,"message":"213","line":94,"column":6,"nodeType":"211","endLine":94,"endColumn":8,"suggestions":"215"},{"ruleId":"209","severity":1,"message":"216","line":96,"column":3,"nodeType":"193","endLine":96,"endColumn":12,"suggestions":"217"},{"ruleId":"191","severity":1,"message":"218","line":129,"column":9,"nodeType":"193","messageId":"194","endLine":129,"endColumn":21},{"ruleId":"191","severity":1,"message":"219","line":2,"column":17,"nodeType":"193","messageId":"194","endLine":2,"endColumn":25},{"ruleId":"191","severity":1,"message":"219","line":3,"column":17,"nodeType":"193","messageId":"194","endLine":3,"endColumn":25},{"ruleId":"191","severity":1,"message":"220","line":33,"column":9,"nodeType":"193","messageId":"194","endLine":33,"endColumn":26},{"ruleId":"191","severity":1,"message":"219","line":1,"column":10,"nodeType":"193","messageId":"194","endLine":1,"endColumn":18},{"ruleId":"191","severity":1,"message":"196","line":2,"column":8,"nodeType":"193","messageId":"194","endLine":2,"endColumn":13},{"ruleId":"191","severity":1,"message":"221","line":22,"column":11,"nodeType":"193","messageId":"194","endLine":22,"endColumn":20},{"ruleId":"209","severity":1,"message":"222","line":31,"column":6,"nodeType":"211","endLine":31,"endColumn":20,"suggestions":"223"},{"ruleId":"191","severity":1,"message":"224","line":5,"column":27,"nodeType":"193","messageId":"194","endLine":5,"endColumn":32},{"ruleId":"209","severity":1,"message":"225","line":143,"column":6,"nodeType":"211","endLine":143,"endColumn":17,"suggestions":"226"},{"ruleId":"191","severity":1,"message":"202","line":2,"column":16,"nodeType":"193","messageId":"194","endLine":2,"endColumn":24},{"ruleId":"191","severity":1,"message":"227","line":9,"column":10,"nodeType":"193","messageId":"194","endLine":9,"endColumn":22},{"ruleId":"191","severity":1,"message":"228","line":9,"column":24,"nodeType":"193","messageId":"194","endLine":9,"endColumn":39},{"ruleId":"191","severity":1,"message":"229","line":5,"column":10,"nodeType":"193","messageId":"194","endLine":5,"endColumn":33},{"ruleId":"191","severity":1,"message":"219","line":1,"column":17,"nodeType":"193","messageId":"194","endLine":1,"endColumn":25},{"ruleId":"191","severity":1,"message":"230","line":6,"column":8,"nodeType":"193","messageId":"194","endLine":6,"endColumn":15},{"ruleId":"191","severity":1,"message":"192","line":2,"column":10,"nodeType":"193","messageId":"194","endLine":2,"endColumn":14},{"ruleId":"191","severity":1,"message":"231","line":2,"column":16,"nodeType":"193","messageId":"194","endLine":2,"endColumn":27},{"ruleId":"191","severity":1,"message":"192","line":2,"column":71,"nodeType":"193","messageId":"194","endLine":2,"endColumn":75},{"ruleId":"191","severity":1,"message":"232","line":5,"column":8,"nodeType":"193","messageId":"194","endLine":5,"endColumn":18},{"ruleId":"191","severity":1,"message":"199","line":2,"column":8,"nodeType":"193","messageId":"194","endLine":2,"endColumn":19},{"ruleId":"191","severity":1,"message":"233","line":4,"column":34,"nodeType":"193","messageId":"194","endLine":4,"endColumn":44},{"ruleId":"191","severity":1,"message":"234","line":4,"column":64,"nodeType":"193","messageId":"194","endLine":4,"endColumn":70},{"ruleId":"191","severity":1,"message":"235","line":5,"column":10,"nodeType":"193","messageId":"194","endLine":5,"endColumn":22},{"ruleId":"191","severity":1,"message":"236","line":5,"column":24,"nodeType":"193","messageId":"194","endLine":5,"endColumn":33},{"ruleId":"191","severity":1,"message":"237","line":5,"column":35,"nodeType":"193","messageId":"194","endLine":5,"endColumn":43},{"ruleId":"191","severity":1,"message":"192","line":7,"column":10,"nodeType":"193","messageId":"194","endLine":7,"endColumn":14},{"ruleId":"191","severity":1,"message":"202","line":7,"column":16,"nodeType":"193","messageId":"194","endLine":7,"endColumn":24},{"ruleId":"191","severity":1,"message":"238","line":41,"column":9,"nodeType":"193","messageId":"194","endLine":41,"endColumn":14},{"ruleId":"191","severity":1,"message":"239","line":43,"column":9,"nodeType":"193","messageId":"194","endLine":43,"endColumn":22},{"ruleId":"191","severity":1,"message":"219","line":1,"column":17,"nodeType":"193","messageId":"194","endLine":1,"endColumn":25},{"ruleId":"191","severity":1,"message":"240","line":4,"column":8,"nodeType":"193","messageId":"194","endLine":4,"endColumn":16},{"ruleId":"191","severity":1,"message":"241","line":5,"column":8,"nodeType":"193","messageId":"194","endLine":5,"endColumn":22},{"ruleId":"191","severity":1,"message":"242","line":7,"column":8,"nodeType":"193","messageId":"194","endLine":7,"endColumn":14},{"ruleId":"191","severity":1,"message":"227","line":23,"column":41,"nodeType":"193","messageId":"194","endLine":23,"endColumn":53},{"ruleId":"191","severity":1,"message":"243","line":1,"column":8,"nodeType":"193","messageId":"194","endLine":1,"endColumn":13},{"ruleId":"209","severity":1,"message":"244","line":30,"column":5,"nodeType":"211","endLine":30,"endColumn":12,"suggestions":"245"},"no-native-reassign",["246"],"no-negated-in-lhs",["247"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useParams' is defined but never used.","'axios' is defined but never used.","'purple' is defined but never used.","'green' is defined but never used.","'SongPreview' is defined but never used.","'tracks' is assigned a value but never used.","'setTracks' is assigned a value but never used.","'Redirect' is defined but never used.","'Fragment' is defined but never used.","'NewProject' is defined but never used.","'NewCollection' is defined but never used.","'DialogTitle' is defined but never used.","'TextFormatTwoTone' is defined but never used.","'isSearching' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'term'. Either include it or remove the dependency array.","ArrayExpression",["248"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["249"],["250"],"React Hook useEffect contains a call to 'setHeight'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["251"],"'existingNote' is assigned a value but never used.","'useState' is defined but never used.","'handleGlobalClick' is assigned a value but never used.","'projectId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setNote'. Either include it or remove the dependency array.",["252"],"'Input' is defined but never used.","React Hook useEffect has missing dependencies: 'formWaveSurferOptions' and 'volume'. Either include them or remove the dependency array. You can also do a functional update 'setVolume(v => ...)' if you only need 'volume' in the 'setVolume' call.",["253"],"'collectionId' is assigned a value but never used.","'setCollectionId' is assigned a value but never used.","'TextRotationNoneTwoTone' is defined but never used.","'Emitter' is defined but never used.","'CardActions' is defined but never used.","'classnames' is defined but never used.","'IconButton' is defined but never used.","'Button' is defined but never used.","'SkipPrevious' is defined but never used.","'PlayArrow' is defined but never used.","'SkipNext' is defined but never used.","'theme' is assigned a value but never used.","'handlePreview' is assigned a value but never used.","'MenuItem' is defined but never used.","'FormHelperText' is defined but never used.","'Select' is defined but never used.","'React' is defined but never used.","React Hook useEffect has a missing dependency: 'delay'. Either include it or remove the dependency array.",["254"],"no-global-assign","no-unsafe-negation",{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"257","fix":"259"},{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},"Update the dependencies array to be: [debouncedSearchTerm, term]",{"range":"268","text":"269"},"Update the dependencies array to be: [id]",{"range":"270","text":"271"},{"range":"272","text":"271"},"Add dependencies array: []",{"range":"273","text":"274"},"Update the dependencies array to be: [existingNote, setNote]",{"range":"275","text":"276"},"Update the dependencies array to be: [formWaveSurferOptions, track.url, volume]",{"range":"277","text":"278"},"Update the dependencies array to be: [delay, value]",{"range":"279","text":"280"},[2727,2748],"[debouncedSearchTerm, term]",[1034,1036],"[id]",[2591,2593],[2659,2659],", []",[670,684],"[existingNote, setNote]",[4194,4205],"[formWaveSurferOptions, track.url, volume]",[1229,1236],"[delay, value]"]